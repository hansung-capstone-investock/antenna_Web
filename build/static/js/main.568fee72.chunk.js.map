{"version":3,"sources":["components/Search/Search.jsx","components/News/LiveNews.jsx","components/News/NewsData.jsx","components/News/NewsforMain.jsx","components/Box/MainBox.jsx","components/News/NewsList.jsx","components/Word/HotSearchWord.jsx","components/Word/FontTestPage.jsx","components/Box/ItemBox.jsx","components/Box/InvestBox.jsx","components/Box/KospiBox.jsx","components/Box/NewsBox.jsx","components/Login/LoginForm.jsx","components/Login/SignUpForm.jsx","components/Login/Signing.jsx","components/Login/Logining.jsx","components/Ant/Ant.jsx","components/Ant/AntBox.jsx","components/Ant/FirstBox.jsx","components/Ant/SecondBox.jsx","components/Text/MainText.jsx","components/Ant/ThirdBox.jsx","components/Text/MText.jsx","components/Chart/ChartKospi.jsx","components/Chart/ChartKosdaq.jsx","components/Chart/ChartKospi200.jsx","components/Info/KospiInfo.jsx","components/Info/StockInfo.jsx","components/Info/InfoTops.jsx","components/Interest/DoIntBox.jsx","components/Interest/GetInt.jsx","components/Interest/IntBox.jsx","components/Interest/InterestList.jsx","components/AntennaTest/AntennaSubmit.jsx","layouts/MainLayout/TopBar.jsx","layouts/MainLayout/MainLayout.jsx","layouts/MainLayout/index.js","containers/Main/Main.jsx","containers/Main/index.js","containers/News/News.jsx","containers/News/index.js","containers/Login/Login.jsx","containers/Login/index.js","containers/Word/Word.jsx","containers/Word/index.js","containers/Antenna/Antenna.jsx","containers/Antenna/index.js","containers/SignUp/SignUp.jsx","containers/SignUp/index.js","containers/Info/index.js","containers/Info/InfoStock.jsx","containers/InfoStock/index.js","containers/InfoStock/InfoThreshStock.jsx","containers/MyPage/index.js","containers/MyPage/MyPage.jsx","containers/Backtest/Backtest.jsx","containers/Backtest/index.js","containers/AntennaTest/indicatorList.jsx","containers/AntennaTest/AntennaTestPage.jsx","containers/AntennaTest/index.js","containers/Interest/InterestMain.jsx","containers/Interest/index.js","hoc/withLivePanel.jsx","Router.jsx","ThemeProvider.jsx","index.js"],"names":["styled","div","props","theme","fontColor","input","attrs","type","width","SearchOutlined","LiveNews","ItemWrapper","Wrapper","useState","news","setNews","loading","setLoading","error","setError","useEffect","a","axios","get","response","data","fetchNews","Anews","header","display","color","font","padding","itemLayout","dataSource","renderItem","item","Item","Meta","title","onClick","evt","preventDefault","setPreview","link","href","description","summary","NewsData","req","res","TabPane","Tabs","NewsWrapper","GotoPage","Link","callback","key","console","log","Component","NewsforMain","logged","window","sessionStorage","getItem","defaultActiveKey","onChange","tab","alitem","padBot","to","SwapRightOutlined","NewsList","HotSearchWord","order","dc","setDc","fetchHword","weight","margin","fontlist","FontBox","FontTestPage","boxlist","map","push","Box","ItemBox","history","useHistory","location","pathname","KospiBox","text","MenuItem","path","Tdiv","shadow","MainBox","className","size","NewsBox","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginForm","setid","setpw","failed","setfailed","msg","alert","onFinishFailed","errorInfo","textalign","fontsize","name","initialValues","remember","onFinish","values","id","pw","Logining","label","message","showIcon","rules","required","Password","htmlType","validateMessages","types","email","number","range","SignUpForm","Signing","user","password","url","method","headers","post","catch","then","code","setItem","document","GroupWrapper","Ant","justify","flex","AntBox","AntLink","FirstBox","ThreeList","setThreeList","fetchThreeList","th","rank","bordered","idx","company","float","gap","SecondBox","Twrapper","onInit","typewriter","pauseFor","typeString","start","MainText","withPathName","css","position","top","left","MText","mright","align","bgcolor","mediaDisplay","ChartKospi","Kospi","setKospi","length","localStorage","close","fetchKospi","arr","date","substr","closeY","Math","floor","ResponsiveContainer","height","LineChart","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fontSize","YAxis","domain","Tooltip","formatter","val","Line","stroke","dot","ChartKosdaq","Kosdaq","setKosdaq","fetchKosdaq","ChartKospi200","Kospi200","setKospi200","fetchKospi200","ChartWrapper","colors","todayKospi","KospiDiffint","KospiText","String","KospiDiff","todayKosdaq","KosdaqDiffint","KosdaqText","KosdaqDiff","today200Kospi","Kospi200Diffint","Kospi200Text","Kospi200Diff","KospiInfo","abledKey","setAbledKey","textColor","InfoTops","Data","setData","setDate","Price","setPrice","setCap","price","cap","GetInfoTops","table","animated","inkBar","tabPane","DoIntBox","GetInt","StockLink","IntBox","i","Group","setGroup","g","setG","cmps","companies","c","UpdatePosting","PostData","SBox","setSBox","Complete","ComWrapper","options","stocklist","stock","value","style","placeholder","group","company1","company2","company3","company4","company5","company6","company7","company8","company9","company10","UpdateInt","PlusCircleOutlined","diff","diffrate","MinusCircleOutlined","filter","posting","DeleteInt","DivideCol","Divider","InterestList","AntennaSubmit","Logo","bgColor","PrettyOfWhiteSpace","LoginItem","SearchBar","Autocomplete","e","newcompany","getOptionLabel","option","renderInput","params","TextField","variant","TopBar","Layout","ContentsWrapper","MainLayout","children","CarouselWrapper","Carousel","Main","contentStyle","lineHeight","textAlign","autoplay","effect","News","preview","placement","visible","onClose","src","Login","WordWrapper","mtop","Word","Antenna","SignUp","InfoStock","BoxWrapper","InfoThreshStock","queryString","parse","search","query","Object","keys","StockSearch","StockData","setStockData","setNewsData","view","setView","companyCode","stockData","st","newsData","setChartData","ChartData","Diff","setDiff","starr","difarr","날짜","종가","전일대비","시가","open","고가","high","저가","low","col","dataIndex","render","columns","scroll","x","y","pagination","Close","setClose","Volume","setVolume","volume","reversed","MyPage","onConfirm","removeItem","onCancel","okText","cancelText","w","ConditionWrapper","ButtonWrapper","Panel","Collapse","RangePicker","DatePicker","CheckboxGroup","Checkbox","Backtest","setstart","end","setend","KospiSectorCode","sectorKospi","KospiSectorName","KospiSector","kospiCode","setKospiCode","checkedListKospi","setCheckedListKospi","indeterminateKospi","setIndeterminateKospi","checkAllKospi","setCheckAllKospi","KosdaqSectorCode","sectorKosdaq","KosdaqSectorName","KosdaqSector","kosdaqCode","setKosdaqCode","checkedListKosdaq","setCheckedListKosdaq","indeterminateKosdaq","setIndeterminateKosdaq","checkAllKosdaq","setCheckAllKosdaq","checkedListCondition","setCheckedListCondition","OfferBox","disabledPER","setDisabledPER","disabledPBR","setDisabledPBR","disabledPSR","setDisabledPSR","disabledROE","setDisabledROE","disabledROA","setDisabledROA","disabledNum","setdisabledNum","PER","setPER","PBR","setPBR","PSR","setPSR","ROE","setROE","ROA","setROA","onChangeCondition","checkedValues","onChangeOrderPER","onChangeOrderPBR","onChangeOrderPSR","onChangeOrderROE","onChangeOrderROA","onChangeCon","target","checked","onChangeRange","indexOf","checkOrder","sellMin","setsellMin","sellMax","setsellMax","setActiveKey","BacktestBar","Btdata","setBtdata","btarr","totalarr","profit","sum","btdataset","수익률","누적수익률","BarChart","ReferenceLine","tickFormatter","cursor","fill","Bar","maxBarSize","ArrowDownOutlined","direction","disabledDate","current","moment","subtract","dates","dateStrings","indeterminate","list","defaultValue","min","max","disabled","marks","300","onAfterChange","0.1","step","200","documentElement","scrollTo","market","sector","concat","ko","conditions","PERdata","per","PBRdata","pbr","PSRdata","psr","ROEdata","roe","ROAdata","roa","Testing","sellCondition","SpinDiv","tip","indicatorList","Option","Select","AntennaTestPage","setCompany","checkedIndicator","setCheckedIndicator","setDiffrate","onChangeDefaultIdc","warning","actual","AntennaChart","setAntData","setActData","setPreData","chartArr","setChartArr","setYLine","predict","act","chArr","예측치","실제","connectNulls","defaultChecked","checkedlist","check","predictDate","indicator","InterestMain","PageContentsWrap","WordWrap","smallDelete","withLivePanel","Comp","wordComp","Containers","RedirectMain","Router","exact","backcolor","whiteTheme","primaryColor","darkTheme","ThemeProvider","setTheme","changeTheme","useCallback","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.568fee72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 32px;\r\n  font-size: 20px;\r\n  color: ${(props) => props.theme.fontColor};\r\n  line-height: 32px;\r\n`;\r\n\r\nconst Input = styled.input.attrs({\r\n  type: \"text\",\r\n})`\r\n  min-width: 32px;\r\n  width: ${(props) => props.width || \"100px\"};\r\n  height: 32px;\r\n  padding: 0px 8px;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 0px !important;\r\n  border-bottom: 1px solid ${(props) => props.theme.fontColor}!important;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst Icon = styled(SearchOutlined)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <Input width={props.width} />\r\n      <Icon />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { List, Divider } from \"antd\";\r\nimport { MText } from \"../../components\";\r\n\r\nfunction LiveNews(props) {\r\n  const ItemWrapper = styled.div`\r\n    margin: 1px;\r\n    //뉴스 아이템 타이틀\r\n    .ant-list-item-meta-title {\r\n      padding: 0px 10px;\r\n    }\r\n    //뉴스 아이템 세부설명\r\n    .ant-list-item-meta-description {\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n      font-family: \"a아시아헤드1\";\r\n      padding-left: 15px;\r\n    }\r\n    //뉴스 item 간 divider\r\n    .ant-divider-horizontal {\r\n      margin: 3px 0px;\r\n      width: 80%;\r\n    }\r\n  `;\r\n\r\n  const Wrapper = styled.div`\r\n    width: calc(100%);\r\n    .ant-list-header {\r\n      background-color: #dddddd;\r\n      margin: 7px 7px 0 7px;\r\n    }\r\n  `;\r\n\r\n  const [news, setNews] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        setError(null);\r\n        setNews(null);\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/views/api/livenews\"\r\n          // (req, res) => {\r\n          //   req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          //   res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          // }\r\n        );\r\n        setNews(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchNews();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!news) return null;\r\n\r\n  const Anews = styled.a`\r\n    font-family: \"a아시아헤드3\";\r\n    color: #222831;\r\n  `;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List\r\n        header={\r\n          <MText\r\n            display=\"inline-flex\"\r\n            color=\"#222831\"\r\n            font=\"a아시아헤드3\"\r\n            padding=\"0px 0px 0px 10px\"\r\n          >\r\n            <MText\r\n              color=\"#f05454\"\r\n              font=\"a아시아헤드3\"\r\n              padding=\"0px 0px 0px 0px\"\r\n            >\r\n              TODAY\r\n            </MText>{\" \"}\r\n            &nbsp;실시간 뉴스\r\n          </MText>\r\n        }\r\n        itemLayout=\"horizontal\"\r\n        dataSource={news}\r\n        renderItem={(item) => (\r\n          <ItemWrapper>\r\n            <List.Item.Meta\r\n              title={\r\n                <Anews\r\n                  onClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    props.setPreview(item.link);\r\n                  }}\r\n                  href={item.link}\r\n                >\r\n                  {item.title}\r\n                </Anews>\r\n              }\r\n              description={item.summary}\r\n            ></List.Item.Meta>\r\n            <Divider />\r\n          </ItemWrapper>\r\n        )}\r\n      ></List>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default LiveNews;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { List, Divider } from \"antd\";\r\nimport { MText } from \"../../components\";\r\n\r\nfunction NewsData(props) {\r\n  const ItemWrapper = styled.div`\r\n    //뉴스 아이템 타이틀\r\n    .ant-list-item-meta-title {\r\n      padding: 0px 10px;\r\n    }\r\n    //뉴스 아이템 세부설명\r\n    .ant-list-item-meta-description {\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n      font-family: \"a아시아헤드1\";\r\n      padding-left: 15px;\r\n    }\r\n    //뉴스 item 간 divider\r\n    .ant-divider-horizontal {\r\n      margin: 3px 0px;\r\n      width: 80%;\r\n    }\r\n  `;\r\n\r\n  const Wrapper = styled.div`\r\n    width: calc(100%);\r\n    height: 100%;\r\n    .ant-list-header {\r\n      background-color: #dddddd;\r\n      margin: 7px 7px 0 7px;\r\n    }\r\n  `;\r\n\r\n  const [news, setNews] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        setError(null);\r\n        setNews(null);\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/views/api/news\",\r\n          (req, res) => {\r\n            req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n            res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          }\r\n        );\r\n        setNews(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchNews();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!news) return null;\r\n\r\n  const Anews = styled.a`\r\n    font-family: \"a아시아헤드3\";\r\n    color: #222831;\r\n  `;\r\n  return (\r\n    <Wrapper>\r\n      <List\r\n        header={\r\n          <MText\r\n            display=\"inline-flex\"\r\n            color=\"#222831\"\r\n            font=\"a아시아헤드3\"\r\n            padding=\"0px 0px 0px 10px\"\r\n          >\r\n            <MText\r\n              color=\"#f05454\"\r\n              font=\"a아시아헤드3\"\r\n              padding=\"0px 0px 0px 0px\"\r\n            >\r\n              TODAY\r\n            </MText>{\" \"}\r\n            &nbsp;주요 뉴스\r\n          </MText>\r\n        }\r\n        itemLayout=\"horizontal\"\r\n        dataSource={news}\r\n        renderItem={(item) => (\r\n          <ItemWrapper>\r\n            <List.Item.Meta\r\n              title={\r\n                <Anews\r\n                  onClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    props.setPreview(item.link);\r\n                  }}\r\n                  href={item.link}\r\n                >\r\n                  {item.title}\r\n                </Anews>\r\n              }\r\n              description={item.summary}\r\n            ></List.Item.Meta>\r\n            <Divider />\r\n          </ItemWrapper>\r\n        )}\r\n      ></List>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default NewsData;\r\n","import { Tabs } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { SwapRightOutlined } from \"@ant-design/icons\";\r\nimport { ChartKosdaq } from \"../../components\";\r\nimport { MainText } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport NewsData from \"../News/NewsData\";\r\nimport LiveNews from \"../News/LiveNews\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  height: 80%;\r\n  background-color: white;\r\n  .ant-tabs-nav {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\nconst NewsWrapper = styled.div`\r\n  width: 100%;\r\n  height: 220px;\r\n  //뉴스리스트 size를 margin bottom으로\r\n  margin-bottom: 80px;\r\n`;\r\n\r\n//페이지 이동 링크 텍스트\r\nconst GotoPage = styled(Link)`\r\n  text-decoration: none;\r\n  font-family: \"nanumRoundB\";\r\n  font-weight: 600;\r\n  color: #f14b4b;\r\n  font-size: 16px;\r\n`;\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\nconst NewsforMain = () => {\r\n  const logged = window.sessionStorage.getItem(\"logged\");\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Tabs defaultActiveKey=\"1\" type=\"line\" onChange={callback}>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              주요뉴스\r\n            </MText>\r\n          }\r\n          key=\"1\"\r\n        >\r\n          <NewsWrapper>\r\n            <NewsData />\r\n          </NewsWrapper>\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              실시간뉴스\r\n            </MText>\r\n          }\r\n          key=\"2\"\r\n        >\r\n          <NewsWrapper>\r\n            <LiveNews />\r\n          </NewsWrapper>\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              관심뉴스\r\n            </MText>\r\n          }\r\n          key=\"3\"\r\n        >\r\n          <NewsWrapper>\r\n            {logged === \"true\" ? (\r\n              <GotoPage\r\n                to=\"/main/interest\"\r\n                font=\"nanumRoundB\"\r\n                color=\"#f14b4b\"\r\n                alitem=\"flex-start\"\r\n                padBot=\"0px\"\r\n              >\r\n                관심종목 설정하고 뉴스 골라 보기\r\n                <SwapRightOutlined />\r\n              </GotoPage>\r\n            ) : (\r\n              <div>로그인하셈</div>\r\n            )}\r\n          </NewsWrapper>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NewsforMain;\r\n","import React, { useContext } from \"react\";\r\nimport styled, { css, ThemeContext } from \"styled-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { MainText } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport \"./MainBox.css\";\r\n\r\nconst withPathName = (Component) => (props) => {\r\n  const history = useHistory();\r\n  return <Component {...props} path={history.location.pathname} />;\r\n};\r\n\r\nconst MenuItem = withPathName(styled(Link)`\r\n  font-family: \"Mfont\";\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-top: 200px;\r\n  margin-right: 10px;\r\n  padding: 0px 10px;\r\n  text-decoration: none;\r\n  text-align: right;\r\n  color: ${(props) => props.theme.fontColor};\r\n  height: 40px;\r\n  display: inline-block;\r\n  position: relative;\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 0px;\r\n    height: 5px;\r\n    width: 0px;\r\n    background-color: #30475e;\r\n    content: \"\";\r\n    transition: 0.2s;\r\n  }\r\n  &:hover {\r\n    ::after {\r\n      text-decoration: wavy;\r\n      width: 100%;\r\n    }\r\n  }\r\n`);\r\nconst imgsrc = \"/AntennaGif.gif\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Box = styled.div`\r\n  padding: 80px 60px;\r\n  display: inline-block;\r\n  height: 500px;\r\n  width: 100%;\r\n  background-image: url(${imgsrc});\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\nconst Tdiv = styled.div`\r\n  text-shadow: ${(props) => props.shadow || \"\"};\r\n  color: ${(props) => props.color || \"\"};\r\n`;\r\n\r\nconst MainBox = () => {\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <MainText\r\n          font=\"a아시아헤드2\"\r\n          color=\"#f14b4b\"\r\n          className=\"fadeIn animated\"\r\n        >\r\n          <Tdiv>ANTENNA</Tdiv>\r\n        </MainText>\r\n        <MText color=\"#30475e\" size=\"18px\" className=\"fadeIn animated\">\r\n          개미들을 위한 로보 어드바이저\r\n        </MText>\r\n        <br />\r\n        <MenuItem to=\"/main/antenna\">\r\n          <Tdiv color=\"#30475e\">C l i c k ! > ></Tdiv>\r\n        </MenuItem>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { MainNews } from \"../News\";\r\nimport { LiveNews } from \"../News\";\r\nimport { NewsData } from \"../News\";\r\nimport { Divider } from \"antd\";\r\nimport { NewsApp } from \"../../components\";\r\n\r\n//뉴스 탭 \"/main/news\"\r\n\r\nconst Wrapper = styled.div`\r\n  display: -ms-inline-grid;\r\n  width: 95%;\r\n  padding: 10px 0px 0px 40px;\r\n  display: inline-block;\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    position: inherit;\r\n    display: block;\r\n    height: 600px;\r\n    width: 90vw;\r\n    margin: 0 0 0 0;\r\n  }\r\n`;\r\n\r\nconst NewsWrapper = styled.div`\r\n  width: calc(100%);\r\n  height: 300px;\r\n  margin: 10px 10px 20px 0;\r\n  background-color: white;\r\n  overflow-y: scroll;\r\n  border: 5px solid #30475e;\r\n`;\r\n\r\nconst NewsList = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <NewsWrapper>\r\n        <NewsData setPreview={props.setPreview}></NewsData>\r\n      </NewsWrapper>\r\n\r\n      <NewsWrapper>\r\n        <LiveNews setPreview={props.setPreview}></LiveNews>\r\n      </NewsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { List, Divider } from \"antd\";\r\nimport { MText } from \"../../components\";\r\n\r\nconst HotSearchWord = () => {\r\n  const Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%auto;\r\n\r\n    .ant-list-header {\r\n      background-color: #fbfbfb;\r\n      margin: 3px 7px 0 7px;\r\n    }\r\n    @media screen and (max-width: 1300px) {\r\n      display: none;\r\n    }\r\n  `;\r\n\r\n  const ItemWrapper = styled.div`\r\n    margin: 1px;\r\n    //뉴스 아이템 타이틀\r\n    .ant-list-item-meta-title {\r\n      padding: 0px 10px;\r\n    }\r\n\r\n    //뉴스 item 간 divider\r\n    .ant-divider-horizontal {\r\n      margin: 5px 0px;\r\n      width: 80%;\r\n    }\r\n  `;\r\n  const [dc, setDc] = useState([\r\n    { order: \"1\", title: \"\" },\r\n    { order: \"2\", title: \"\" },\r\n    { order: \"3\", title: \"\" },\r\n    { order: \"4\", title: \"\" },\r\n    { order: \"5\", title: \"\" },\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchHword = async () => {\r\n      try {\r\n        setError(null);\r\n        setDc(null);\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/views/api/dcList\",\r\n          (req, res) => {\r\n            req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n            res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          }\r\n        );\r\n        const data = response.data;\r\n        console.log(\"dc\", response.data);\r\n        setDc([\r\n          { order: \"1\", title: data[0].title },\r\n          { order: \"2\", title: data[1].title },\r\n          { order: \"3\", title: data[2].title },\r\n          { order: \"4\", title: data[3].title },\r\n          { order: \"5\", title: data[4].title },\r\n          { order: \"6\", title: data[5].title },\r\n          { order: \"7\", title: data[6].title },\r\n          { order: \"8\", title: data[7].title },\r\n          { order: \"9\", title: data[8].title },\r\n          { order: \"10\", title: data[9].title },\r\n        ]);\r\n      } catch (e) {\r\n        setError(e);\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchHword();\r\n  }, []);\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List\r\n        header={\r\n          <MText\r\n            display=\"inline-flex\"\r\n            color=\"#222831\"\r\n            font=\"a아시아헤드3\"\r\n            padding=\"0px 0px 0px 10px\"\r\n          >\r\n            <MText\r\n              color=\"#f05454\"\r\n              font=\"a아시아헤드3\"\r\n              padding=\"0px 0px 0px 0px\"\r\n            >\r\n              실시간\r\n            </MText>{\" \"}\r\n            &nbsp;키워드\r\n          </MText>\r\n        }\r\n        itemLayout=\"horizontal\"\r\n        dataSource={dc}\r\n        renderItem={(item) => (\r\n          <ItemWrapper>\r\n            <List.Item.Meta\r\n              title={\r\n                <MText\r\n                  display=\"inline-flex\"\r\n                  color=\"#9b9b9b\"\r\n                  font=\"a아시아헤드1\"\r\n                  padding=\"0px 0px 0px 10px\"\r\n                  weight=\"300\"\r\n                  margin=\"3px 0 0 0\"\r\n                >\r\n                  <MText\r\n                    color=\"#0800e9\"\r\n                    font=\"a아시아헤드3\"\r\n                    padding=\"0px 0px 0px 0px\"\r\n                    weight=\"500\"\r\n                  >\r\n                    {item.order}\r\n                  </MText>\r\n                  &nbsp;&nbsp;{item.title}\r\n                </MText>\r\n              }\r\n            ></List.Item.Meta>\r\n            <Divider />\r\n          </ItemWrapper>\r\n        )}\r\n      ></List>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HotSearchWord;\r\n","import \"../../Fonts/index.css\";\r\nimport react from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst text = \"Investock, Antenna, 안녕하세요!! 입니다!! ~~~~ , 123456\\n\";\r\n\r\nconst fontlist = [\r\n  \"a고딕11\",\r\n  \"a고딕13\",\r\n  \"a고딕15\",\r\n  \"a고딕17\",\r\n  \"a아시아헤드1\",\r\n  \"a아시아헤드2\",\r\n  \"a아시아헤드3\",\r\n  \"josefinB\",\r\n  \"josefinL\",\r\n  \"josefinR\",\r\n  \"juliusR\",\r\n  \"Mfont\",\r\n  \"nanumRoundB\",\r\n  \"nanumRoundL\",\r\n  \"righteousR\",\r\n  \"sixCapsR\",\r\n];\r\n\r\nconst FontBox = styled.div`\r\n  font-family: ${(props) => props.font || \"\"};\r\n  font-size: 20pt;\r\n  border: 1px black solid;\r\n`;\r\n\r\nconst FontTestPage = () => {\r\n  const boxlist = [];\r\n  fontlist.map((font) => {\r\n    boxlist.push(<FontBox font={font}>{text}</FontBox>);\r\n    console.log(\"boxlist\", boxlist);\r\n  });\r\n\r\n  return <div>{boxlist}</div>;\r\n};\r\n\r\nexport default FontTestPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SwapRightOutlined } from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//메인의 관심종목 박스\r\nconst Box = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 12% 5px 80px 15%;\r\n`;\r\nconst GotoPage = styled(Link)`\r\n  text-decoration: none;\r\n  font-family: \"nanumRoundB\";\r\n  font-weight: 600;\r\n  color: #f14b4b;\r\n  font-size: 16px;\r\n`;\r\nconst ItemBox = () => {\r\n  const history = useHistory();\r\n  console.log(\"path\", history.location.pathname);\r\n\r\n  const logged = window.sessionStorage.getItem(\"logged\");\r\n\r\n  return (\r\n    <Box>\r\n      {logged ? (\r\n        <div>hi</div>\r\n      ) : (\r\n        <GotoPage to=\"/main/infoThresh\">\r\n          로그인하고 관심종목 설정하기 <SwapRightOutlined />\r\n        </GotoPage>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ItemBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = styled.div`\r\n  position: absolute;\r\n  top: 400px;\r\n  left: 67%;\r\n  margin: 0 5%;\r\n  display: inline;\r\n  height: 180px;\r\n  width: 260px;\r\n  padding: 10px;\r\n  box-shadow: 5px 5px 5px 5px gray;\r\n  background-color: white;\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    position: inherit;\r\n    display: block;\r\n    height: 600px;\r\n    width: 100%;\r\n    margin: 0px;\r\n  }\r\n  @media screen and (max-height: 600px) {\r\n    position: inherit;\r\n    display: block;\r\n    height: 600px;\r\n    width: 100%;\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst InvestBox = () => {\r\n  return <Box>모의투자</Box>;\r\n};\r\n\r\nexport default InvestBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChartKospi, KospiInfo } from \"../../components\";\r\nimport { MainText } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport axios from \"axios\";\r\n\r\nconst Box = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 12% 5px 80px 15%;\r\n`;\r\nconst KospiBox = () => {\r\n  const [Kospi, setKospi] = useState([]);\r\n\r\n  return (\r\n    <Box>\r\n      <KospiInfo text={true}></KospiInfo>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default KospiBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NewsforMain from \"../News/NewsforMain\";\r\nimport NewsData from \"../News/NewsData\";\r\n\r\nconst Box = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 12% 5px 80px 15%;\r\n`;\r\n\r\nconst NewsBox = () => {\r\n  return (\r\n    <Box>\r\n      <NewsforMain />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewsBox;\r\n","import { Form, Input, Button, Alert } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NewsData } from \"../../components\";\r\nimport { Route, Link, useHistory } from \"react-router-dom\";\r\nimport { MainText } from \"../../components\";\r\nimport { Logining } from \"../../components\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { span: 6 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 100px;\r\n  vertical-align: middle;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst formWrapper = styled.div`\r\n  width: 600px;\r\n  vertical-align: middle;\r\n  position: absolute;\r\n  left: 10%;\r\n  top: 15%;\r\n`;\r\n\r\nconst LoginForm = (props) => {\r\n  const [id, setid] = useState();\r\n  const [pw, setpw] = useState();\r\n  const [failed, setfailed] = useState();\r\n  const history = useHistory();\r\n\r\n  const msg = props.alert;\r\n\r\n  //로그인 버튼 클릭 시\r\n  const onFinish = (values: any) => {\r\n    setid(values.id);\r\n    setpw(values.pw);\r\n\r\n    //로그인 함수 실행 후\r\n    if (Logining(values)) {\r\n      //성공하면 페이지 이동(새로고침)\r\n    } else {\r\n      //실패하면 페이지 이동(새로고침x 돌아가기)\r\n      onFinishFailed();\r\n      history.push(\"/main/login\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    setfailed(\"failed\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <formWrapper>\r\n        <MainText color=\"black\" textalign=\"center\" fontsize=\"36px\">\r\n          Investock 로그인\r\n        </MainText>\r\n        <br />\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          {failed === \"failed\" ? (\r\n            <Form.Item label=\" \">\r\n              <Alert message=\"로그인에 실패하였습니다.\" type=\"error\" showIcon />\r\n            </Form.Item>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {failed === \"failed\" ? (\r\n            <Form.Item label=\" \">\r\n              <Alert message=\"로그인에 실패하였습니다.\" type=\"error\" showIcon />\r\n            </Form.Item>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {msg ? (\r\n            <Form.Item label=\" \">\r\n              <Alert message={msg} type=\"error\" showIcon />\r\n            </Form.Item>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <Form.Item\r\n            label=\"ID\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: \"*\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"pw\"\r\n            rules={[{ required: true, message: \"*\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...tailLayout}\r\n            wrapperCol={{ ...layout.wrapperCol, offset: 10 }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              로그인\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Link to=\"/main/signUp\">회원가입</Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </formWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Form, Input, InputNumber, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { MainText, Signing } from \"../../components\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 9 },\r\n  wrapperCol: { span: 6 },\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 100px;\r\n  vertical-align: middle;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst formWrapper = styled.div`\r\n  width: 600px;\r\n  vertical-align: middle;\r\n  position: absolute;\r\n  left: 10%;\r\n  top: 15%;\r\n`;\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nconst SignUpForm = () => {\r\n  const onFinish = (values: any) => {\r\n    console.log(\"before Signing\");\r\n    Signing(values);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <formWrapper>\r\n        <MainText color=\"black\" textalign=\"center\" fontsize=\"36px\">\r\n          Investock 회원가입\r\n        </MainText>\r\n        <br />\r\n        <Form\r\n          {...layout}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item\r\n            name={[\"user\", \"id\"]}\r\n            label=\"ID\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[\"user\", \"pw\"]}\r\n            label=\"PW\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 9 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              가입하기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </formWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { List, Avatar } from \"antd\";\r\n\r\nfunction Signing(values) {\r\n  const id = values.user.id;\r\n  const password = values.user.pw;\r\n\r\n  console.log(values.user.id);\r\n\r\n  axios({\r\n    url: \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/account/api/signup/\",\r\n    method: \"post\",\r\n    data: { id, password },\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!id) return null;\r\n\r\n  return <div></div>;\r\n}\r\n\r\nexport default Signing;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { List, Avatar } from \"antd\";\r\n\r\nfunction Logining(values) {\r\n  const id = values.id;\r\n  const password = values.pw;\r\n  axios\r\n    .post(\r\n      \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/account/api/login/\",\r\n      {\r\n        id: id,\r\n        password: password,\r\n      }\r\n    )\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      const data = response.data;\r\n\r\n      if (data.code === \"1001\") {\r\n        console.log(\"로그인실패\");\r\n        return false;\r\n      } else {\r\n        console.log(\"로그인성공\");\r\n        window.sessionStorage.setItem(\"id\", id);\r\n        window.sessionStorage.setItem(\"pw\", password);\r\n        window.sessionStorage.setItem(\"logged\", \"true\");\r\n\r\n        document.location.href = \"/main/antenna\";\r\n      }\r\n    });\r\n}\r\n\r\nexport default Logining;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { MainText } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport { AntBox, FirstBox, SecondBox } from \"../../components\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport { GoAntTest } from \"../../components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 10px 10px 30px;\r\n`;\r\nconst GroupWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst Ant = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Row justify=\"end\">\r\n        <Col flex=\"500px\">\r\n          <GroupWrapper>\r\n            <AntBox />\r\n          </GroupWrapper>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <GroupWrapper>\r\n            <FirstBox />\r\n          </GroupWrapper>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <GroupWrapper>\r\n            <SecondBox />\r\n          </GroupWrapper>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Ant;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FirstBox, SecondBox, ThirdBox } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AntBox = () => {\r\n  const Wrapper = styled.div`\r\n    height: 380px;\r\n    width: 100%;\r\n    display: inline-block;\r\n    align-items: center;\r\n    vertical-align: top;\r\n    /*base code*/\r\n    .animated {\r\n      -webkit-animation-duration: 2s;\r\n      animation-duration: 2s;\r\n      -webkit-animation-fill-mode: both;\r\n      animation-fill-mode: both;\r\n    }\r\n    .animated.infinite {\r\n      -webkit-animation-iteration-count: infinite;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    .animated.hinge {\r\n      -webkit-animation-duration: 3s;\r\n      animation-duration: 3s;\r\n    }\r\n    /*the animation definition*/\r\n    @-webkit-keyframes fadeIn {\r\n      0% {\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    @keyframes fadeIn {\r\n      0% {\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    .fadeIn {\r\n      -webkit-animation-name: fadeIn;\r\n      animation-name: fadeIn;\r\n    }\r\n  `;\r\n\r\n  const Box = styled.div`\r\n    width: 100%;\r\n    height: 500px;\r\n    display: inline-block;\r\n    align-items: center;\r\n    padding: 140px 10px 10px 40px;\r\n  `;\r\n  const AntLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: #f14b4b;\r\n    padding: 7px;\r\n    background-color: #dddddd75;\r\n  `;\r\n  const text = \"<< 백테스팅으로 전략 분석 <<\";\r\n  return (\r\n    <Wrapper>\r\n      <Box>\r\n        <MText\r\n          className=\"fadeInDown animated\"\r\n          font=\"a고딕15\"\r\n          size=\"30px\"\r\n          display=\"inline-flex\"\r\n          padBot=\"0\"\r\n          color=\"#f14b4b\"\r\n        >\r\n          안테나\r\n          <MText\r\n            font=\"a고딕13\"\r\n            size=\"28px\"\r\n            display=\"inline-flex\"\r\n            color=\"#222831\"\r\n            padBot=\"0\"\r\n          >\r\n            와 함께하는\r\n          </MText>\r\n        </MText>\r\n        <MText\r\n          font=\"a고딕13\"\r\n          size=\"28px\"\r\n          color=\"#222831\"\r\n          className=\"fadeInDown animated\"\r\n        >\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;당신의 투자 전략\r\n        </MText>\r\n        <MText\r\n          className=\"fadeInDown animated\"\r\n          font=\"a고딕15\"\r\n          size=\"28px\"\r\n          display=\"inline-flex\"\r\n          padBot=\"0\"\r\n          color=\"#30475E\"\r\n        >\r\n          <AntLink to=\"/main/backtest\" className=\"fadeIn animated\">\r\n            {text}\r\n          </AntLink>\r\n        </MText>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AntBox;\r\n","import styled from \"styled-components\";\r\nimport { MText } from \"../../components\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { List, Typography, Divider } from \"antd\";\r\n\r\nconst FirstBox = () => {\r\n  const Wrapper = styled.div`\r\n    width: 300px;\r\n    height: 500px;\r\n    padding: 70px 10px 0px 30px;\r\n\r\n    .ant-list-bordered {\r\n      border: 0;\r\n    }\r\n    .animated {\r\n      -webkit-animation-duration: 1s;\r\n      animation-duration: 1s;\r\n      -webkit-animation-fill-mode: both;\r\n      animation-fill-mode: both;\r\n    }\r\n    .animated.infinite {\r\n      -webkit-animation-iteration-count: infinite;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    .animated.hinge {\r\n      -webkit-animation-duration: 2s;\r\n      animation-duration: 2s;\r\n    }\r\n    /*the animation definition*/\r\n    @-webkit-keyframes fadeInLeft {\r\n      0% {\r\n        opacity: 0;\r\n        -webkit-transform: translate3d(-100%, 0, 0);\r\n        transform: translate3d(-100%, 0, 0);\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n        -webkit-transform: none;\r\n        transform: none;\r\n      }\r\n    }\r\n    @keyframes fadeInLeft {\r\n      0% {\r\n        opacity: 0;\r\n        -webkit-transform: translate3d(-100%, 0, 0);\r\n        -ms-transform: translate3d(-100%, 0, 0);\r\n        transform: translate3d(-100%, 0, 0);\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n        -webkit-transform: none;\r\n        -ms-transform: none;\r\n        transform: none;\r\n      }\r\n    }\r\n    .fadeInLeft {\r\n      -webkit-animation-name: fadeInLeft;\r\n      animation-name: fadeInLeft;\r\n    }\r\n  `;\r\n\r\n  const Box = styled.div`\r\n    width: 100%;\r\n    height: 500px;\r\n    display: inline-block;\r\n    align-items: center;\r\n  `;\r\n\r\n  const [ThreeList, setThreeList] = useState([]);\r\n  const [view, setView] = useState();\r\n  useEffect(() => {\r\n    const fetchThreeList = async () => {\r\n      try {\r\n        setThreeList(null);\r\n\r\n        const response = await axios.get(\r\n          \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/compare3/\",\r\n          (req, res) => {\r\n            req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n            res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          }\r\n        );\r\n        setThreeList(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n        console.log(\"Three\", response.data);\r\n      } catch (e) {}\r\n    };\r\n\r\n    fetchThreeList();\r\n  }, []);\r\n  const data = [];\r\n\r\n  useEffect(() => {\r\n    if (ThreeList) {\r\n      ThreeList.map((th, key) => {\r\n        if (th.rank < 6) {\r\n          data.push(th);\r\n        }\r\n      });\r\n    }\r\n  }, [ThreeList]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List\r\n        className=\"fadeInLeft animated\"\r\n        size=\"small\"\r\n        header={\r\n          <div>\r\n            <MText color=\"black\" font=\"a고딕15\" size=\"20px\">\r\n              3달\r\n            </MText>\r\n            <MText color=\"black\" font=\"a고딕13\" size=\"18px\">\r\n              전에 알았더라면?\r\n            </MText>\r\n          </div>\r\n        }\r\n        bordered\r\n        dataSource={data}\r\n        renderItem={(item, idx) => (\r\n          <List.Item>\r\n            <MText color=\"#1b287b\">{idx + 1}</MText>\r\n            &nbsp; &nbsp;\r\n            <MText color=\"#4f4f4f\" font=\"a고딕11\">\r\n              {item.company}\r\n            </MText>\r\n            &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <MText color=\"red\" font=\"a아시아헤드1\" float=\"right\">\r\n              &nbsp; ▲&nbsp;{item.gap}&nbsp;%\r\n            </MText>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FirstBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FirstBox, ThirdBox } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SecondBox = () => {\r\n  const Wrapper = styled.div`\r\n    height: 380px;\r\n    width: 100%;\r\n    display: inline-block;\r\n    align-items: center;\r\n    vertical-align: top;\r\n  `;\r\n\r\n  const Box = styled.div`\r\n    width: 100%;\r\n    height: 500px;\r\n    display: block;\r\n    align-items: center;\r\n    padding: 180px 10px 10px 30px;\r\n\r\n    /*base code*/\r\n    .animated {\r\n      -webkit-animation-duration: 3s;\r\n      animation-duration: 3s;\r\n      -webkit-animation-fill-mode: both;\r\n      animation-fill-mode: both;\r\n    }\r\n    .animated.infinite {\r\n      -webkit-animation-iteration-count: infinite;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    .animated.hinge {\r\n      -webkit-animation-duration: 8s;\r\n      animation-duration: 8s;\r\n    }\r\n    /*the animation definition*/\r\n    @-webkit-keyframes fadeIn {\r\n      0% {\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    @keyframes fadeIn {\r\n      0% {\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    .fadeIn {\r\n      -webkit-animation-name: fadeIn;\r\n      animation-name: fadeIn;\r\n    }\r\n  `;\r\n\r\n  const AntLink = styled(Link)`\r\n    text-decoration: none;\r\n    font-size: 28px;\r\n    color: #f14b4b;\r\n    padding: 9px;\r\n    background-color: #dddddd75;\r\n  `;\r\n  const Twrapper = styled.div`\r\n    width: 100%;\r\n  `;\r\n  return (\r\n    <Wrapper>\r\n      <Box>\r\n        <MText\r\n          className=\"fadeInDown animated\"\r\n          font=\"a고딕13\"\r\n          size=\"30px\"\r\n          display=\"inline-block\"\r\n          padBot=\"0\"\r\n          color=\"#30475E\"\r\n        >\r\n          <Twrapper>\r\n            <Typewriter\r\n              onInit={(typewriter) => {\r\n                typewriter\r\n                  .pauseFor(500)\r\n                  .typeString(\"이제는 놓치지 마세요\")\r\n                  .start();\r\n              }}\r\n            ></Typewriter>\r\n          </Twrapper>\r\n          <AntLink to=\"/main/antenna/test\" className=\"fadeIn animated\">\r\n            &nbsp;>> 예측하러 가기 >>&nbsp;\r\n          </AntLink>\r\n        </MText>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SecondBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainText = styled.div`\r\n  font-family: ${(props) => props.font || \"a아시아헤드2\"};\r\n  float: ${(props) => props.float || \"none\"};\r\n  display: ${(props) => props.display || \"block\"};\r\n  font-size: ${(props) => props.fontsize || \"62px\"};\r\n  font-weight: 700;\r\n  line-height: 1.3125;\r\n  text-shadow: ${(props) => props.shadow || \"\"};\r\n  color: ${(props) => props.color || \"#f05454\"};\r\n  position: ${(props) => props.position || \"inherit\"};\r\n  top: ${(props) => props.top || \"0\"};\r\n  left: ${(props) => props.left || \"0\"};\r\n  align-items: center;\r\n  text-align: ${(props) => props.textalign || \"left\"};\r\n  vertical-align: middle;\r\n  text-shadow: 0 0 50px rgba(0, 0, 0, 0.163);\r\n`;\r\n\r\nexport default MainText;\r\n","import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled, { css, ThemeContext } from \"styled-components\";\r\nimport { MText } from \"../../components\";\r\n\r\nconst withPathName = (Component) => (props) => {\r\n  const history = useHistory();\r\n  return <Component {...props} path={history.location.pathname} />;\r\n};\r\n\r\nconst MenuItem = withPathName(styled(Link)`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 0px 0px;\r\n  text-decoration: none;\r\n  text-align: right;\r\n  color: ${(props) => props.theme.fontColor};\r\n  height: 40px;\r\n  display: inline-block;\r\n  position: relative;\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 0px;\r\n    height: 3px;\r\n    width: 0px;\r\n    background-color: red;\r\n    content: \"\";\r\n    transition: 0.3s;\r\n  }\r\n  &:hover {\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n  ${(props) => {\r\n    if (props.path === props.to) {\r\n      return css`\r\n        ::after {\r\n          width: 100%;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`);\r\nconst ThirdBox = () => {\r\n  const history = useHistory();\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: inline-block;\r\n    align-items: baseline;\r\n    vertical-align: middle;\r\n    margin-top: 120px;\r\n    text-align: right;\r\n  `;\r\n  return (\r\n    <Wrapper>\r\n      <MText color=\"black\">지금 &nbsp;</MText>\r\n      <MText color=\"red\">안테나</MText>\r\n      <MText color=\"black\">의 추천은?</MText>\r\n      <br />\r\n      <MenuItem to=\"/main/backtest\">자세히보기</MenuItem>\r\n      <br />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ThirdBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MText = styled.div`\r\n  float: ${(props) => props.float || \"none\"};\r\n  margin-right: ${(props) => props.mright || \"0\"};\r\n  margin: ${(props) => props.margin || \"0 0 0 0\"};\r\n  display: ${(props) => props.display || \"inline-block\"};\r\n  font-family: ${(props) => props.font || \"a아시아헤드2\"};\r\n  font-size: ${(props) => props.size || \"16px\"};\r\n  font-weight: ${(props) => props.weight || \"600\"};\r\n  line-height: 1.59;\r\n  text-shadow: ${(props) => props.shadow || \"\"};\r\n  color: ${(props) => props.color || \"#3b3b46\"};\r\n  align-items: ${(props) => props.alitem || \"center\"};\r\n  padding-bottom: ${(props) => props.padBot || \"5px\"};\r\n  padding: ${(props) => props.padding || \"\"};\r\n  vertical-align: ${(props) => props.align || \"middle\"};\r\n  text-shadow: 0 0 50px rgba(0, 0, 0, 0.18);\r\n  position: ${(props) => props.position || \"inherit\"};\r\n  top: ${(props) => props.top || \"0\"};\r\n  left: ${(props) => props.left || \"0\"};\r\n  background-color: ${(props) => props.bgcolor || \"\"};\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    display: ${(props) => props.mediaDisplay || \"inline-block\"};\r\n  }\r\n`;\r\n\r\nexport default MText;\r\n","import React, { useState, useEffect, PureComponent } from \"react\";\r\nimport { ResponsiveLine } from \"nivo\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst ChartKospi = () => {\r\n  const [Kospi, setKospi] = useState([]);\r\n  useEffect(() => {\r\n    const fetchKospi = async () => {\r\n      const res = await axios.get(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/kospiyear/\",\r\n        (req, res) => {\r\n          req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n        }\r\n      );\r\n      setKospi(res.data);\r\n      console.log(\"res kospi data\", res.data);\r\n      console.log(\"res data todaykospi\", res.data[res.data.length - 1]);\r\n      console.log(\"res data lastkospi\", res.data[res.data.length - 2]);\r\n      window.localStorage.setItem(\r\n        \"todayKospi\",\r\n        res.data[res.data.length - 1].close\r\n      );\r\n      window.localStorage.setItem(\r\n        \"lastKospi\",\r\n        res.data[res.data.length - 2].close\r\n      );\r\n    };\r\n    fetchKospi();\r\n  }, []);\r\n  const arr = [];\r\n  Kospi.map((a) => {\r\n    arr.push({\r\n      date: a.date.substr(2, 8),\r\n      close: a.close,\r\n      closeY: Math.floor(a.close),\r\n    });\r\n  });\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart\r\n        width={600}\r\n        height={300}\r\n        data={arr}\r\n        margin={{\r\n          top: 5,\r\n          right: 10,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <XAxis dataKey=\"date\" tick={{ fontSize: 10 }} />\r\n        <YAxis\r\n          dataKey=\"closeY\"\r\n          type=\"number\"\r\n          domain={[\"auto\", \"auto\"]}\r\n          tick={{ fontSize: 10 }}\r\n        />\r\n        <Tooltip formatter={(val, name) => [val, \"코스피\"]} />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"#f75283\" dot={false} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ChartKospi;\r\n","import React, { useState, useEffect, PureComponent } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst ChartKosdaq = () => {\r\n  const [Kosdaq, setKosdaq] = useState([]);\r\n  useEffect(() => {\r\n    const fetchKosdaq = async () => {\r\n      const res = await axios.get(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/kosdaqyear/\",\r\n        (req, res) => {\r\n          req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n        }\r\n      );\r\n      setKosdaq(res.data);\r\n      console.log(\"res kosdaq\", res.data);\r\n      window.localStorage.setItem(\r\n        \"todayKosdaq\",\r\n        res.data[res.data.length - 1].close\r\n      );\r\n      window.localStorage.setItem(\r\n        \"lastKosdaq\",\r\n        res.data[res.data.length - 2].close\r\n      );\r\n    };\r\n    fetchKosdaq();\r\n  }, []);\r\n  const arr = [];\r\n  Kosdaq.map((a) => {\r\n    arr.push({\r\n      date: a.date.substr(2, 8),\r\n      close: a.close,\r\n      closeY: Math.floor(a.close),\r\n    });\r\n  });\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart\r\n        width={600}\r\n        height={300}\r\n        data={arr}\r\n        margin={{\r\n          top: 5,\r\n          right: 10,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <XAxis dataKey=\"date\" tick={{ fontSize: 10 }} />\r\n        <YAxis\r\n          dataKey=\"closeY\"\r\n          type=\"number\"\r\n          domain={[\"auto\", \"auto\"]}\r\n          tick={{ fontSize: 10 }}\r\n        />\r\n        <Tooltip formatter={(val, name) => [val, \"코스닥\"]} />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"#f75288\" dot={false} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ChartKosdaq;\r\n","import React, { useState, useEffect, PureComponent } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst ChartKospi200 = () => {\r\n  const [Kospi200, setKospi200] = useState([]);\r\n  useEffect(() => {\r\n    const fetchKospi200 = async () => {\r\n      const res = await axios.get(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/kospi200year\",\r\n        (req, res) => {\r\n          req.header(\"Access-Control-Allow-Origin\", \"*\");\r\n          res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n        }\r\n      );\r\n      setKospi200(res.data);\r\n      console.log(\"res Kospi200\", res.data);\r\n      window.localStorage.setItem(\r\n        \"today200Kospi\",\r\n        res.data[res.data.length - 1].close\r\n      );\r\n      window.localStorage.setItem(\r\n        \"last200Kospi\",\r\n        res.data[res.data.length - 2].close\r\n      );\r\n    };\r\n    fetchKospi200();\r\n  }, []);\r\n  const arr = [];\r\n  Kospi200.map((a) => {\r\n    arr.push({\r\n      date: a.date.substr(2, 8),\r\n      close: a.close,\r\n      closeY: Math.floor(a.close),\r\n    });\r\n  });\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart\r\n        width={600}\r\n        height={300}\r\n        data={arr}\r\n        margin={{\r\n          top: 5,\r\n          right: 10,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <XAxis dataKey=\"date\" tick={{ fontSize: 10 }} />\r\n        <YAxis\r\n          dataKey=\"closeY\"\r\n          type=\"number\"\r\n          domain={[\"auto\", \"auto\"]}\r\n          tick={{ fontSize: 10 }}\r\n        />\r\n        <Tooltip formatter={(val, name) => [val, \"코스피200\"]} />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" dot={false} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ChartKospi200;\r\n","import { Tabs } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SwapRightOutlined } from \"@ant-design/icons\";\r\nimport { ChartKospi, ChartKospi200 } from \"../../components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ChartKosdaq } from \"../../components\";\r\nimport { MainText } from \"../../components\";\r\nimport { MText } from \"../../components\";\r\n//import \"./KospiInfo.css\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  height: 80%;\r\n  background-color: white;\r\n  .ant-tabs-nav {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\nconst ChartWrapper = styled.div`\r\n  width: 450px;\r\n  height: 200px;\r\n  //오늘의 증시 보러가기 텍스트 때문에 margin\r\n  margin-bottom: 60px;\r\n`;\r\nvar colors = [\"red\", \"red\", \"red\"];\r\n\r\n//Kospi Tab 코스피 탭\r\nvar todayKospi = window.localStorage.getItem(\"todayKospi\");\r\nvar KospiDiffint = todayKospi - window.localStorage.getItem(\"lastKospi\");\r\nvar KospiText = String(todayKospi);\r\nvar KospiDiff = \"\";\r\n\r\nif (KospiDiffint < 0) {\r\n  colors[0] = \"blue\";\r\n  KospiDiff = \"  ▼ \" + String(KospiDiffint).substr(0, 6);\r\n} else {\r\n  colors[0] = \"red\";\r\n  KospiDiff = \"  ▲\" + String(KospiDiffint).substr(0, 6);\r\n}\r\nconsole.log(\"kospidiff\", KospiDiffint);\r\nconsole.log(\"kospitext\", KospiText);\r\n\r\n//Kosdaq Tab 코스닥 탭\r\nvar todayKosdaq = window.localStorage.getItem(\"todayKosdaq\");\r\nvar KosdaqDiffint = todayKosdaq - window.localStorage.getItem(\"lastKosdaq\");\r\nvar KosdaqText = String(todayKosdaq);\r\nvar KosdaqDiff = \"\";\r\n\r\nif (KosdaqDiffint < 0) {\r\n  colors[1] = \"blue\";\r\n  KosdaqDiff = \"  ▼ \" + String(KosdaqDiffint).substr(0, 6);\r\n} else {\r\n  colors[1] = \"Red\";\r\n  KosdaqDiff = \"  ▲\" + String(KosdaqDiffint).substr(0, 6);\r\n}\r\n\r\n//Kospi 200 Tab 코스피 200 탭\r\nvar today200Kospi = window.localStorage.getItem(\"today200Kospi\");\r\nvar last200Kospi = window.localStorage.getItem(\"last200Kospi\");\r\nvar Kospi200Diffint = today200Kospi - last200Kospi;\r\nvar Kospi200Text = String(today200Kospi);\r\nvar Kospi200Diff = \"\";\r\n\r\nif (Kospi200Diffint < 0) {\r\n  colors[2] = \"blue\";\r\n  Kospi200Diff = \"  ▼ \" + String(Kospi200Diffint).substr(0, 6);\r\n} else {\r\n  colors[2] = \"red\";\r\n  Kospi200Diff = \"  ▲\" + String(Kospi200Diffint).substr(0, 6);\r\n}\r\n\r\n//페이지 이동 링크 텍스트\r\nconst GotoPage = styled(Link)`\r\n  text-decoration: none;\r\n  font-family: \"nanumRoundB\";\r\n  font-weight: 600;\r\n  color: #f14b4b;\r\n  font-size: 16px;\r\n`;\r\nconst KospiInfo = (text) => {\r\n  console.log(\"text?\", text);\r\n  const [abledKey, setAbledKey] = useState(\"1\");\r\n  const [textColor, setTextColor] = useState(colors);\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n    setAbledKey(key);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Tabs defaultActiveKey=\"1\" type=\"line\" onChange={callback}>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              &nbsp;코스피&nbsp;&nbsp;\r\n              {abledKey == \"1\" ? (\r\n                <MText display=\"inline-flex\" color={textColor[0]}>\r\n                  {KospiText}\r\n                  <MText color={textColor[0]} size=\"12px\" alitem=\"flex-start\">\r\n                    {KospiDiff}\r\n                  </MText>\r\n                </MText>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </MText>\r\n          }\r\n          key=\"1\"\r\n        >\r\n          <ChartWrapper>\r\n            <ChartKospi></ChartKospi>\r\n          </ChartWrapper>\r\n          {text.text == true ? (\r\n            <GotoPage to=\"/main/infoThresh\">\r\n              오늘의 증시 보러가기 <SwapRightOutlined />\r\n            </GotoPage>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              &nbsp;코스닥&nbsp;&nbsp;\r\n              {abledKey == \"2\" ? (\r\n                <MText display=\"inline-flex\" color={textColor[1]}>\r\n                  {KosdaqText}\r\n                  <MText color={textColor[1]} size=\"12px\" alitem=\"flex-start\">\r\n                    {KosdaqDiff}\r\n                  </MText>\r\n                </MText>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </MText>\r\n          }\r\n          key=\"2\"\r\n        >\r\n          <ChartWrapper>\r\n            <ChartKosdaq></ChartKosdaq>\r\n          </ChartWrapper>\r\n          {text.text == true ? (\r\n            <GotoPage to=\"/main/infoThresh\">\r\n              오늘의 증시 보러가기 <SwapRightOutlined />\r\n            </GotoPage>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <MText display=\"inline-flex\" alitem=\"flex-start\" padBot=\"0px\">\r\n              &nbsp;코스피 200&nbsp;&nbsp;\r\n              {abledKey == \"3\" ? (\r\n                <MText\r\n                  display=\"inline-flex\"\r\n                  color={textColor[2]}\r\n                  alitem=\"flex-start\"\r\n                >\r\n                  {Kospi200Text}\r\n                  <MText color={textColor[2]} size=\"12px\" alitem=\"flex-start\">\r\n                    {Kospi200Diff}\r\n                  </MText>\r\n                </MText>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </MText>\r\n          }\r\n          key=\"3\"\r\n        >\r\n          <ChartWrapper>\r\n            <ChartKospi200></ChartKospi200>\r\n          </ChartWrapper>\r\n          {text.text == true ? (\r\n            <GotoPage to=\"/main/infoThresh\">\r\n              오늘의 증시 보러가기 <SwapRightOutlined />\r\n            </GotoPage>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default KospiInfo;\r\n","import styled from \"styled-components\";\r\nimport React, { useState, useEffect, useHistory } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nasync function StockSearch(code) {\r\n  const response = await axios.post(\r\n    \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/stocksearch/\",\r\n    { companyCode: code }\r\n  );\r\n  if (response.data) {\r\n    console.log(\"stocksearchdata\", response.data);\r\n  }\r\n}\r\nconst StockInfo = (query) => {\r\n  const code = query.code;\r\n  StockSearch(code);\r\n};\r\n\r\nexport default StockInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { Tabs } from \"antd\";\r\nimport { MText } from \"../../components\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst InfoTops = () => {\r\n  const [Data, setData] = useState();\r\n  const [Date, setDate] = useState();\r\n  const [Price, setPrice] = useState();\r\n  const [PriceTabel, setPriceTable] = useState();\r\n  const [Cap, setCap] = useState();\r\n  const [CapTable, setCapTable] = useState();\r\n\r\n  async function GetInfoTops(code) {\r\n    const response = await axios.get(\r\n      \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/topstock/\"\r\n    );\r\n    if (response.data) {\r\n      console.log(\"투자정보\", response.data);\r\n      setDate(response.data.date);\r\n      setPrice(response.data.price);\r\n      setCap(response.data.cap);\r\n      setData(response.data);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetInfoTops();\r\n  }, []);\r\n\r\n  const table = (data) => {\r\n    const arr = [];\r\n    data.map((top, idx) => {});\r\n\r\n    const col = [];\r\n    return (\r\n      <Table\r\n        className=\"table-striped-rows\"\r\n        dataSource={arr}\r\n        columns={arr}\r\n        scroll={{ x: 0, y: 500 }}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    table(Price);\r\n  }, [Data]);\r\n\r\n  const OnChange = (props) => {\r\n    console.log(\"onchange\", props);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MText font=\"a아시아헤드2\" size=\"20px\" color=\"red\">\r\n        Top\r\n        <MText color=\"black\" padding=\"3px 0 0 0\">\r\n          &nbsp;종목\r\n        </MText>\r\n      </MText>\r\n      <Tabs\r\n        onChange={OnChange}\r\n        type=\"card\"\r\n        animated={{ inkBar: true, tabPane: false }}\r\n      >\r\n        <TabPane tab=\"상한가\" key=\"1\">\r\n          Content of Tab Pane 1\r\n        </TabPane>\r\n        <TabPane tab=\"거래량 상위\" key=\"2\">\r\n          Content of Tab Pane 2\r\n        </TabPane>\r\n      </Tabs>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default InfoTops;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MainText, MText } from \"../../components\";\r\n\r\n/**\r\n * 관심종목을 등록하세요!\r\n */\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .animated {\r\n    -webkit-animation-duration: 1s;\r\n    animation-duration: 1s;\r\n    -webkit-animation-fill-mode: both;\r\n    animation-fill-mode: both;\r\n  }\r\n  .animated.infinite {\r\n    -webkit-animation-iteration-count: infinite;\r\n    animation-iteration-count: infinite;\r\n  }\r\n  .animated.hinge {\r\n    -webkit-animation-duration: 2s;\r\n    animation-duration: 2s;\r\n  }\r\n  /*the animation definition*/\r\n  @-webkit-keyframes fadeInDown {\r\n    0% {\r\n      opacity: 0;\r\n      -webkit-transform: translate3d(0, -100%, 0);\r\n      transform: translate3d(0, -100%, 0);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -webkit-transform: none;\r\n      transform: none;\r\n    }\r\n  }\r\n  @keyframes fadeInDown {\r\n    0% {\r\n      opacity: 0;\r\n      -webkit-transform: translate3d(0, -100%, 0);\r\n      -ms-transform: translate3d(0, -100%, 0);\r\n      transform: translate3d(0, -100%, 0);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -webkit-transform: none;\r\n      -ms-transform: none;\r\n      transform: none;\r\n    }\r\n  }\r\n  .fadeInDown {\r\n    -webkit-animation-name: fadeInDown;\r\n    animation-name: fadeInDown;\r\n  }\r\n`;\r\n\r\nconst TextAni = styled(MText)`\r\n  transition: 2;\r\n`;\r\n\r\nconst DoIntBox = () => {\r\n  return (\r\n    <Wrapper>\r\n      <MText\r\n        className=\"fadeInDown animated\"\r\n        font=\"a고딕15\"\r\n        size=\"30px\"\r\n        display=\"inline-flex\"\r\n        padBot=\"0\"\r\n        color=\"#30475e\"\r\n      >\r\n        관심 종목\r\n        <MText\r\n          font=\"a고딕13\"\r\n          size=\"30px\"\r\n          display=\"inline-flex\"\r\n          color=\"#30475e\"\r\n          padBot=\"0\"\r\n        >\r\n          을\r\n        </MText>\r\n      </MText>\r\n      <MText\r\n        font=\"a고딕13\"\r\n        size=\"30px\"\r\n        color=\"#30475e\"\r\n        className=\"fadeInDown animated\"\r\n      >\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;확인하세요\r\n      </MText>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DoIntBox;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { List, Avatar } from \"antd\";\r\n\r\nfunction GetInt(values) {\r\n  const id = values;\r\n  const [data, setData] = useState({});\r\n  axios\r\n    .post(\r\n      \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/account/api/intereststock/\",\r\n      {\r\n        name: id,\r\n      },\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    )\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .then((response) => {\r\n      console.log(\"관심종목==> \", response);\r\n      const data = response.data;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport default GetInt;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MainText, MText } from \"../../components\";\r\nimport axios from \"axios\";\r\nimport GetInt from \"./GetInt\";\r\nimport { List, Typography, Divider } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  LineOutlined,\r\n  PlusCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AutoComplete } from \"antd\";\r\nimport stocklist from \"./stocklist.json\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 60px 10px 10px 10px;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .ant-list-bordered {\r\n    border: 0;\r\n  }\r\n  .ant-list-split .ant-list-item {\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nconst StockLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #4f4f4f;\r\n`;\r\n\r\nconst IntBox = (i) => {\r\n  const [Group, setGroup] = useState([]);\r\n  const [g, setG] = useState([]);\r\n  const [data, setData] = useState({});\r\n  const path = useHistory();\r\n  console.log(\"name\", window.sessionStorage.getItem(\"id\"));\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/account/api/intereststockWeb/\",\r\n        {\r\n          name: window.sessionStorage.getItem(\"id\"),\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then((response) => {\r\n        if (response) {\r\n          console.log(\"관심종목==> \", response.data);\r\n\r\n          const cmps = response.data[i.i].companies;\r\n          const c = [];\r\n          for (var key in cmps) {\r\n            c.push(cmps[key]);\r\n          }\r\n          setG(c);\r\n          setGroup(response.data[i.i]);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const UpdateInt = (props) => {\r\n    console.log(\"props?\", props);\r\n    const arr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    g.map((data, key) => {\r\n      arr[key] = data.company;\r\n      if (key == g.length - 1 && props) {\r\n        arr[key + 1] = props;\r\n      }\r\n    });\r\n    const PostData = {\r\n      id: Group.id,\r\n      name: window.sessionStorage.getItem(\"id\"),\r\n      group: Group.group,\r\n      company1: arr[0],\r\n      company2: arr[1],\r\n      company3: arr[2],\r\n      company4: arr[3],\r\n      company5: arr[4],\r\n      company6: arr[5],\r\n      company7: arr[6],\r\n      company8: arr[7],\r\n      company9: arr[8],\r\n      company10: arr[9],\r\n    };\r\n    console.log(\"PostData\", PostData);\r\n    UpdatePosting(PostData);\r\n  };\r\n\r\n  const UpdatePosting = (PostData) => {\r\n    axios\r\n      .post(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/account/api/interestUpdate/\",\r\n        PostData,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then((response) => {\r\n        if (response) {\r\n          console.log(\"업데이트되었나요? \", response);\r\n          //window.location.reload();\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"g\", g);\r\n  }, [g]);\r\n  const [SBox, setSBox] = useState(false);\r\n  const Complete = () => {\r\n    const ComWrapper = styled.div`\r\n      margin-right: 5px;\r\n      float: right;\r\n    `;\r\n    const options = [];\r\n    stocklist.map((stock, key) => {\r\n      options.push({ value: stock.company, label: stock.company });\r\n    });\r\n    return (\r\n      <ComWrapper>\r\n        <AutoComplete\r\n          style={{ width: 130 }}\r\n          options={options}\r\n          placeholder=\"이름으로 찾기\"\r\n          onChange={(val) => UpdateInt(val)}\r\n        />\r\n      </ComWrapper>\r\n    );\r\n  };\r\n\r\n  const DeleteInt = (company) => {\r\n    console.log(\"delete props\", company);\r\n    setG(g.filter((g) => g.company != company));\r\n    console.log(\"deleted g?\", g);\r\n    const posting = g.filter((g) => g.company != company);\r\n    const arr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    posting.map((data, key) => {\r\n      arr[key] = data.company;\r\n    });\r\n    console.log(\"Arr\", arr);\r\n    const PostData = {\r\n      id: Group.id,\r\n      name: window.sessionStorage.getItem(\"id\"),\r\n      group: Group.group,\r\n      company1: arr[0],\r\n      company2: arr[1],\r\n      company3: arr[2],\r\n      company4: arr[3],\r\n      company5: arr[4],\r\n      company6: arr[5],\r\n      company7: arr[6],\r\n      company8: arr[7],\r\n      company9: arr[8],\r\n      company10: arr[9],\r\n    };\r\n    console.log(\"PostData\", PostData);\r\n    UpdatePosting(PostData);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MText\r\n        color=\"#F05454\"\r\n        font=\"a고딕15\"\r\n        size=\"20px\"\r\n        margin=\"0px 0px 5px 5px\"\r\n      >\r\n        그룹 {i.i + 1}\r\n      </MText>\r\n      <List\r\n        className=\"fadeInLeft animated\"\r\n        size=\"small\"\r\n        header={\r\n          <div>\r\n            <MText color=\"#30475E\" font=\"a고딕15\" size=\"20px\">\r\n              {Group.group}\r\n            </MText>\r\n            <MText\r\n              color=\"#247e05\"\r\n              font=\"a고딕11\"\r\n              size=\"18px\"\r\n              float=\"right\"\r\n              margin=\"3px 0 0 0 \"\r\n            >\r\n              <PlusCircleOutlined onClick={() => setSBox(true)} />\r\n            </MText>\r\n            {SBox ? <Complete /> : <div></div>}\r\n          </div>\r\n        }\r\n        bordered\r\n        dataSource={g}\r\n        renderItem={(item, idx) => (\r\n          <List.Item>\r\n            <MText color=\"#1b287b\">{idx + 1}</MText>\r\n            &nbsp; &nbsp;\r\n            <MText color=\"#4f4f4f\" font=\"a고딕11\">\r\n              <StockLink\r\n                to={`/main/infoThresh/stock?code=${item.code}&name=${item.company}`}\r\n              >\r\n                {item.company}\r\n              </StockLink>\r\n            </MText>\r\n            <MText\r\n              size=\"13px\"\r\n              color={item.diff < 0 ? \"blue\" : \"red\"}\r\n              font=\"a고딕11\"\r\n              float=\"right\"\r\n            >\r\n              {item.diff < 0 ? \"▼\" : \"▲\"}&nbsp;{item.diff}&nbsp;&nbsp;\r\n              {item.diffrate}&nbsp;%&nbsp;&nbsp;\r\n              <MText display=\"inline-flex\" margin=\"4px 0 0 0\" color=\"#ffa600\">\r\n                <MinusCircleOutlined onClick={() => DeleteInt(item.company)} />\r\n              </MText>\r\n            </MText>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default IntBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport { DoIntBox, IntBox } from \"../Interest\";\r\n\r\n/**\r\n * 관심종목 리스트 컴포넌트\r\n */\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 20px;\r\n  background-color: #ebebebef;\r\n\r\n  .ant-row {\r\n    height: 500px;\r\n  }\r\n`;\r\n\r\nconst GroupWrapper = styled.div`\r\n  width: 100%;\r\n  height: 85%;\r\n`;\r\n\r\nconst DivideCol = styled(Divider)`\r\n  height: 100%;\r\n  width: 1px;\r\n`;\r\n\r\nconst InterestList = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Row justify=\"end\">\r\n        <Col flex=\"300px\">\r\n          <GroupWrapper>\r\n            <DoIntBox />\r\n          </GroupWrapper>\r\n        </Col>\r\n        <DivideCol type=\"vertical\" />\r\n        <Col flex=\"auto\">\r\n          <GroupWrapper>\r\n            <IntBox i={0} />\r\n          </GroupWrapper>\r\n        </Col>\r\n        <DivideCol type=\"vertical\" />\r\n        <Col flex=\"auto\">\r\n          <GroupWrapper>\r\n            <IntBox i={1} />\r\n          </GroupWrapper>\r\n        </Col>\r\n        <DivideCol type=\"vertical\" />\r\n        <Col flex=\"auto\">\r\n          <GroupWrapper>\r\n            <IntBox i={2} />\r\n          </GroupWrapper>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default InterestList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AntennaChart } from \"../../components\";\r\n\r\nasync function AntennaSubmit(data) {\r\n  const response = await axios.post(\r\n    \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/tensor/antenna/\",\r\n    data\r\n  );\r\n  console.log(\"Antenna\", response.data);\r\n  console.log(\"나온다...\", response.data.actual);\r\n  AntennaChart(response.data);\r\n\r\n  window.localStorage.setItem(\"antSubmit\", \"done\");\r\n  return;\r\n}\r\n\r\nexport default AntennaSubmit;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled, { css, ThemeContext } from \"styled-components\";\r\nimport { Search } from \"../../components\";\r\nimport { EyeFilled, LoginOutlined } from \"@ant-design/icons\";\r\nimport { MenuItems } from \"../../containers/MenuItems\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport stocklist from \"../../containers/AntennaTest/stocklist.json\";\r\nimport \"../../Fonts/index.css\";\r\n\r\nconst withPathName = (Component) => (props) => {\r\n  const history = useHistory();\r\n  return <Component {...props} path={history.location.pathname} />;\r\n};\r\n\r\nconst Logo = styled.div`\r\n  height: 50px;\r\n  font-family: \"a아시아헤드3\";\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding: 0px 20px;\r\n  cursor: pointer;\r\n  color: #222831;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #6363635d;\r\n  padding-right: 10px;\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 12%);\r\n  user-select: none;\r\n`;\r\n\r\nconst PrettyOfWhiteSpace = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst MenuItem = withPathName(styled(Link)`\r\n  font-family: \"a아시아헤드2\";\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  padding: 0px 16px;\r\n  text-decoration: none;\r\n  color: #222831;\r\n  line-height: 70px;\r\n  height: 70px;\r\n  display: inline-block;\r\n  position: relative;\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 0px;\r\n    height: 3px;\r\n    width: 0px;\r\n    background-color: #f05454;\r\n    content: \"\";\r\n    transition: 0.3s;\r\n  }\r\n  &:hover {\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n  ${(props) => {\r\n    if (props.path === props.to) {\r\n      return css`\r\n        ::after {\r\n          width: 100%;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n\r\n  @media screen and (max-width:1100px) {\r\n    display: none;\r\n  }\r\n`);\r\n\r\nconst LoginItem = withPathName(styled(Link)`\r\n  font-family: \"a아시아헤드2\";\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  padding: 0px 16px;\r\n  text-decoration: none;\r\n  color: #222831;\r\n  line-height: 70px;\r\n  height: 70px;\r\n  display: inline-block;\r\n  position: relative;\r\n  ::after {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 0px;\r\n    height: 3px;\r\n    width: 0px;\r\n    background-color: #f05454;\r\n    content: \"\";\r\n    transition: 0.3s;\r\n  }\r\n  &:hover {\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n  ${(props) => {\r\n    if (props.path === props.to) {\r\n      return css`\r\n        ::after {\r\n          width: 100%;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`);\r\nconst ThemeButton = styled.div`\r\n  height: 30px;\r\n  width: 30px;\r\n  margin: 0px 16px;\r\n  color: ${(props) => props.theme.fontColor};\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  font-size: 22px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const [company, setCompany] = useState({});\r\n  return (\r\n    <Autocomplete\r\n      id=\"searchStock\"\r\n      company={company}\r\n      onChange={(e, newcompany) => {\r\n        console.log(\"newcompany\", newcompany);\r\n        if (newcompany) {\r\n          console.log(\"newcomappny\", newcompany);\r\n          history.push({\r\n            pathname: `/main/infoThresh/stock?code=${newcompany.code}&name=${newcompany.company}`,\r\n          });\r\n        }\r\n      }}\r\n      options={stocklist}\r\n      getOptionLabel={(option) => option.company}\r\n      style={{ width: 160 }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"\" variant=\"outlined\" />\r\n      )}\r\n    ></Autocomplete>\r\n  );\r\n};\r\nconst TopBar = (props) => {\r\n  const logged = window.sessionStorage.getItem(\"logged\");\r\n  console.log(\"logged??\", logged);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Logo onClick={() => history.push(\"/main/home\")}>I N V E S T O C K</Logo>\r\n      <PrettyOfWhiteSpace />\r\n      <div>\r\n        <MenuItem to=\"/main/antenna\" color=\"#f05454\">\r\n          Antenna\r\n        </MenuItem>\r\n        <MenuItem to=\"/main/news\">뉴스</MenuItem>\r\n        <MenuItem to=\"/main/infoThresh\">투자정보</MenuItem>\r\n        <MenuItem to=\"/main/backtest\">백테스트</MenuItem>\r\n        <MenuItem to=\"/main/antenna/test\">주가예측</MenuItem>\r\n        <MenuItem to=\"/main/interest\">관심종목</MenuItem>\r\n      </div>\r\n      {logged === \"true\" ? (\r\n        <LoginItem to=\"/main/myPage\">로그아웃</LoginItem>\r\n      ) : (\r\n        <LoginItem to=\"/main/login\">로그인</LoginItem>\r\n      )}\r\n      <SearchBar></SearchBar>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TopBar from \"./TopBar\";\r\nimport Store from \"../../store/Store\";\r\n\r\nconst Layout = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 960px;\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  height: calc(100% - 80px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst MainLayout = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Layout id=\"hi\">\r\n      <TopBar />\r\n      <ContentsWrapper>{children}</ContentsWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import MainLayout from \"./MainLayout\";\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  InvestBox,\r\n  ItemBox,\r\n  KospiBox,\r\n  MainBox,\r\n  NewsBox,\r\n} from \"../../components\";\r\nimport { Carousel } from \"antd\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * \"/main/home\"\r\n */\r\nconst CarouselWrapper = styled(Carousel)`\r\n  > .slick-dots li button {\r\n    background: #afafaf;\r\n  }\r\n  > .slick-dots li.slick-active button {\r\n    background: #f05454;\r\n  }\r\n`;\r\nconst Main = (props) => {\r\n  const Layout = styled.div`\r\n    padding: 20px;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: inline-flex;\r\n  `;\r\n\r\n  const Wrapper = styled.div`\r\n    width: 50%;\r\n    height: 600px;\r\n  `;\r\n  const contentStyle = {\r\n    height: \"500px\",\r\n    color: \"#000000\",\r\n    lineHeight: \"500px\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <MainBox />\r\n      </Wrapper>\r\n      <Wrapper>\r\n        <CarouselWrapper autoplay={false} effect=\"fade\">\r\n          <div>\r\n            <h3 style={contentStyle}>\r\n              <KospiBox />\r\n            </h3>\r\n          </div>\r\n          <div>\r\n            <h3 style={contentStyle}>\r\n              <NewsBox />\r\n            </h3>\r\n          </div>\r\n          <div>\r\n            <h3 style={contentStyle}>\r\n              <ItemBox />\r\n            </h3>\r\n          </div>\r\n        </CarouselWrapper>\r\n      </Wrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./Main\";\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport { NewsList } from \"../../components\";\r\nimport { Drawer } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  vertical-align: middle;\r\n  background-color: #f05454;\r\n  display: flex;\r\n`;\r\n\r\nconst News = (props) => {\r\n  const [preview, setPreview] = useState();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NewsList setPreview={setPreview}></NewsList>\r\n\r\n      <Drawer\r\n        width=\"80%\"\r\n        placement=\"right\"\r\n        visible={preview}\r\n        onClose={() => {\r\n          setPreview(\"\");\r\n        }}\r\n      >\r\n        <iframe\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          src={preview}\r\n        ></iframe>\r\n      </Drawer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import News from \"./News\";\r\nexport default News;\r\n","import styled from \"styled-components\";\r\nimport { LoginForm } from \"../../components\";\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: middle;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  console.log(\"값 넘어오는지\", props.alert);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LoginForm alert={props.alert}></LoginForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Login from \"./Login\";\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ItemBox, HotSearchWord } from \"../../components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: -ms-inline-grid;\r\n  height: 100%;\r\n  width: 360px;\r\n  vertical-align: middle;\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst WordWrapper = styled.div`\r\n  width: 80%;\r\n  height: 490px;\r\n  border: 5px solid #30475e;\r\n  background-color: white;\r\n  margin-top: ${(props) => props.mtop || \"0\"};\r\n`;\r\n\r\nconst Word = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <WordWrapper>\r\n        <HotSearchWord />\r\n      </WordWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import Word from \"./Word\";\r\nexport default Word;\r\n","import React from \"react\";\r\nimport { Word } from \"../../containers\";\r\nimport styled from \"styled-components\";\r\nimport { Ant, HotSearchWord } from \"../../components\";\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: middle;\r\n  align-items: center;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: white;\r\n  padding-left: 60px;\r\n  padding-top: 20px;\r\n`;\r\nconst Wrapper2 = styled.div`\r\n  display: -ms-inline-grid;\r\n  width: 360px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  padding-left: 30px;\r\n  position: absolute;\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst Antenna = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <Ant></Ant>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Antenna;\r\n","import Antenna from \"./Antenna\";\r\nexport default Antenna;\r\n","import styled from \"styled-components\";\r\nimport { SignUpForm } from \"../../components\";\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: middle;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SignUpForm></SignUpForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import SignUp from \"./SignUp\";\r\nexport default SignUp;\r\n","import InfoStock from \"./InfoStock\";\r\nexport default InfoStock;\r\n","import {\r\n  ChartKospi,\r\n  KospiInfo,\r\n  KospiData,\r\n  MText,\r\n  InfoTops,\r\n} from \"../../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useState, useEffect, useHistory } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n} from \"recharts\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n/**\r\n * 투자정보 전체 페이지\r\n * @returns\r\n */\r\nconst InfoStock = () => {\r\n  const Wrapper = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 20px;\r\n    display: inline-flex;\r\n\r\n    .ant-table-wrapper {\r\n      height: 400px;\r\n    }\r\n    .ant-table-cell {\r\n      padding: 4px;\r\n      height: 17px;\r\n    }\r\n  `;\r\n  const BoxWrapper = styled.div`\r\n    height: 80%;\r\n    width: 50%;\r\n  `;\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <BoxWrapper>\r\n          <KospiInfo text={false} />\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <InfoTops></InfoTops>\r\n        </BoxWrapper>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoStock;\r\n","import InfoThreshStock from \"./InfoThreshStock\";\r\nexport default InfoThreshStock;\r\n","import { ChartKospi, KospiInfo, KospiData, MText } from \"../../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useState, useEffect, useHistory } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n} from \"recharts\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { Row, Col } from \"antd\";\r\n/**\r\n * 투자정보 기업 상세 페이지\r\n * @returns\r\n */\r\nconst InfoThreshStock = () => {\r\n  const Wrapper = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 20px;\r\n    display: inline-flex;\r\n\r\n    .ant-table-wrapper {\r\n      height: 400px;\r\n    }\r\n    .ant-table-cell {\r\n      padding: 4px;\r\n      height: 17px;\r\n    }\r\n  `;\r\n  const BoxWrapper = styled.div`\r\n    height: 80%;\r\n    width: 50%;\r\n  `;\r\n  const [query, setQuery] = useState(\r\n    queryString.parse(document.location.search)\r\n  );\r\n  useState(() => {\r\n    if (Object.keys(query).length) {\r\n      //query가 있으면 투자정보 검색한것\r\n      console.log(\"query?\", query);\r\n      StockSearch(query.code);\r\n    } else {\r\n      console.log(\"no query\");\r\n    }\r\n  }, []);\r\n  const defaultView = () => {\r\n    return <div></div>;\r\n  };\r\n\r\n  const [StockData, setStockData] = useState();\r\n  const [NewsData, setNewsData] = useState();\r\n  const [view, setView] = useState(defaultView);\r\n  //query있을 때 axios=> 차트랑 뷰 셋팅해줌\r\n  async function StockSearch(code) {\r\n    console.log(\"code???\", code);\r\n    const response = await axios.post(\r\n      \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/stocksearch/\",\r\n      { companyCode: code }\r\n    );\r\n    if (response.data) {\r\n      console.log(\"stocksearchdata\", response.data);\r\n      const arr = [];\r\n      const starr = response.data.stockData;\r\n      starr.map((st, key) => {\r\n        arr.push({ date: st.date, close: st.close });\r\n      });\r\n      setStockData(response.data.stockData);\r\n      setNewsData(response.data.newsData);\r\n      setChartData(arr);\r\n      setView(table(response.data));\r\n    }\r\n  }\r\n\r\n  //차트 그리는 함수\r\n  const [ChartData, setChartData] = useState([]);\r\n\r\n  //전일대비 계산\r\n  const [Diff, setDiff] = useState([]);\r\n  //테이블 그리는 함수\r\n  const table = (data) => {\r\n    const arr = [];\r\n    const starr = data.stockData;\r\n    const difarr = [];\r\n    starr.map((st, key) => {\r\n      if (key < 1) {\r\n        difarr.push(0);\r\n      } else {\r\n        var diff = st.close - starr[key - 1].close;\r\n        difarr.push(diff);\r\n      }\r\n    });\r\n    starr.map((st, key) => {\r\n      if (key == 0) {\r\n        const diff = st.close - starr[1].close;\r\n        const diffrate = Math.floor((diff / st.close) * 100);\r\n        console.log(\"diff!!!!!!!1\", diff, diffrate);\r\n        setDiff({ diff: diff, diffrate: diffrate });\r\n      }\r\n      arr.push({\r\n        key: `${key}`,\r\n        날짜: st.date,\r\n        종가: st.close,\r\n        전일대비: difarr[key],\r\n        시가: st.open,\r\n        고가: st.high,\r\n        저가: st.low,\r\n      });\r\n    });\r\n    const col = [\r\n      {\r\n        title: \"날짜\",\r\n        dataIndex: \"날짜\",\r\n        render: (text) => (\r\n          <MText font=\"a고딕11\" size=\"11px\" color=\"#5a5a5a\">\r\n            {text}\r\n          </MText>\r\n        ),\r\n      },\r\n      {\r\n        title: \"종가\",\r\n        dataIndex: \"종가\",\r\n        render: (text) => (\r\n          <MText font=\"a고딕11\" size=\"11px\">\r\n            {text}\r\n          </MText>\r\n        ),\r\n      },\r\n      {\r\n        title: \"전일대비\",\r\n        dataIndex: \"전일대비\",\r\n        render: (text) =>\r\n          text < 0 ? (\r\n            <MText font=\"a고딕11\" size=\"11px\" color=\"blue\">\r\n              ▼&nbsp;{text}\r\n            </MText>\r\n          ) : (\r\n            <MText font=\"a고딕11\" size=\"11px\" color=\"red\">\r\n              ▲&nbsp;{text}\r\n            </MText>\r\n          ),\r\n      },\r\n      {\r\n        title: \"시가\",\r\n        dataIndex: \"시가\",\r\n        render: (text) => (\r\n          <MText font=\"a고딕11\" size=\"11px\">\r\n            {text}\r\n          </MText>\r\n        ),\r\n      },\r\n      {\r\n        title: \"고가\",\r\n        dataIndex: \"고가\",\r\n        render: (text) => (\r\n          <MText font=\"a고딕11\" size=\"11px\">\r\n            {text}\r\n          </MText>\r\n        ),\r\n      },\r\n      {\r\n        title: \"저가\",\r\n        dataIndex: \"저가\",\r\n        render: (text) => (\r\n          <MText font=\"a고딕11\" size=\"11px\">\r\n            {text}\r\n          </MText>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Table\r\n        className=\"table-striped-rows\"\r\n        dataSource={arr}\r\n        columns={col}\r\n        scroll={{ x: 0, y: 500 }}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  const [Close, setClose] = useState();\r\n  const [Volume, setVolume] = useState();\r\n  useEffect(() => {\r\n    if (StockData) {\r\n      setClose(StockData[0].close);\r\n      setVolume(StockData[0].volume);\r\n    }\r\n  }, [StockData]);\r\n  return (\r\n    <Wrapper>\r\n      <BoxWrapper>\r\n        <Row>\r\n          <Col span={12}>\r\n            <MText\r\n              font=\"a아시아헤드1\"\r\n              size=\"30px\"\r\n              color=\"#000000\"\r\n              padding=\"0 0 0 10px\"\r\n            >\r\n              {query.name}\r\n            </MText>\r\n          </Col>\r\n          <Col span={12}>\r\n            {Diff.diff < 0 ? (\r\n              <MText\r\n                font=\"a고딕13\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                padding=\"4px 0 0 0 \"\r\n              >\r\n                ▼&nbsp;&nbsp;{Close}\r\n              </MText>\r\n            ) : (\r\n              <MText\r\n                font=\"a고딕13\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                padding=\"4px 0 0 0 \"\r\n              >\r\n                ▲&nbsp;&nbsp;{Close}\r\n              </MText>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={12}>\r\n            {\" \"}\r\n            <MText\r\n              font=\"a아시아헤드1\"\r\n              size=\"14px\"\r\n              color=\"#585858\"\r\n              display=\"inline-flex\"\r\n              padding=\"0 0 0 10px\"\r\n            >\r\n              거래량&nbsp;&nbsp;{Volume}\r\n            </MText>\r\n          </Col>\r\n          <Col span={12}>\r\n            {\" \"}\r\n            <MText\r\n              font=\"a아시아헤드1\"\r\n              size=\"14px\"\r\n              color=\"#585858\"\r\n              display=\"inline-flex\"\r\n            >\r\n              전일대비&nbsp;&nbsp;\r\n              {Diff.diff < 0 ? (\r\n                <MText\r\n                  font=\"a아시아헤드1\"\r\n                  size=\"14px\"\r\n                  color=\"blue\"\r\n                  display=\"inline-flex\"\r\n                  padding=\"0 0 0 0\"\r\n                >\r\n                  ▼&nbsp;{Diff.diff},&nbsp;&nbsp;{Diff.diffrate}%\r\n                </MText>\r\n              ) : (\r\n                <MText\r\n                  font=\"a아시아헤드1\"\r\n                  size=\"14px\"\r\n                  color=\"red\"\r\n                  display=\"inline-flex\"\r\n                  padding=\"0 0 0 0\"\r\n                >\r\n                  ▲&nbsp;{Diff.diff},&nbsp;&nbsp;{Diff.diffrate}%\r\n                </MText>\r\n              )}\r\n            </MText>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n        <ResponsiveContainer width=\"90%\" height=\"70%\">\r\n          <LineChart\r\n            width={100}\r\n            height={100}\r\n            data={ChartData}\r\n            margin={{\r\n              top: 5,\r\n              right: 10,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <XAxis dataKey=\"date\" tick={{ fontSize: 10 }} reversed={true} />\r\n            <YAxis\r\n              dataKey=\"close\"\r\n              type=\"number\"\r\n              domain={[\"auto\", \"auto\"]}\r\n              tick={{ fontSize: 10 }}\r\n            />\r\n            <Tooltip formatter={(val) => [val, \"종가\"]} />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"close\"\r\n              stroke=\"#ff0000\"\r\n              dot={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n        <Row>\r\n          <Col span={24}></Col>\r\n        </Row>\r\n      </BoxWrapper>\r\n      <BoxWrapper>{view}</BoxWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default InfoThreshStock;\r\n","import MyPage from \"./MyPage\";\r\nexport default MyPage;\r\n","import styled from \"styled-components\";\r\nimport { Form, Input, Button, Popconfirm, message } from \"antd\";\r\nimport { Route, Link, useHistory } from \"react-router-dom\";\r\n\r\nconst MyPage = () => {\r\n  const history = useHistory();\r\n  const doLogout = () => {\r\n    const user = window.sessionStorage.getItem(\"id\");\r\n    console.log(\"logout합니다 >>> \", user);\r\n    const conf = window.confirm(\"로그아웃 하시겠습니까?\");\r\n    if (conf) {\r\n      window.sessionStorage.removeItem(\"id\");\r\n      window.sessionStorage.removeItem(\"pw\");\r\n      window.sessionStorage.setItem(\"logged\", \"false\");\r\n      //로그아웃 후 페이지 이동(새로고침)\r\n      document.location.href = \"/main/antenna\";\r\n    } else {\r\n      history.push(\"/main/myPage\");\r\n    }\r\n  };\r\n\r\n  const confirm = () => {\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.sessionStorage.removeItem(\"pw\");\r\n    window.sessionStorage.setItem(\"logged\", \"false\");\r\n    //로그아웃 후 페이지 이동(새로고침)\r\n    document.location.href = \"/main/antenna\";\r\n  };\r\n\r\n  const cancel = () => {\r\n    history.push(\"/main/myPage\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>MyPage</div>\r\n      <Popconfirm\r\n        title=\"로그아웃하시겠습니까?\"\r\n        onConfirm={confirm}\r\n        onCancel={cancel}\r\n        okText=\"Yes\"\r\n        cancelText=\"No\"\r\n      >\r\n        <Button>로그아웃</Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Space,\r\n  Collapse,\r\n  Checkbox,\r\n  Divider,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { Spin, Alert } from \"antd\";\r\nimport { MainText, MText } from \"../../components\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ReferenceLine } from \"recharts\";\r\nimport {\r\n  ConsoleSqlOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Backtest.css\";\r\nimport sectorKospi from \"./sectorKospi.json\";\r\nimport sectorKosdaq from \"./sectorKosdaq.json\";\r\nimport BacktestChart from \"./BacktestChart\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: inline-flex;\r\n  height: 200vh;\r\n  background-color: #30475e;\r\n  padding: ${(props) => props.padding || \"30px\"};\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: ${(props) => props.w || \"50%\"};\r\n  height: 100%;\r\n  display: inline-block;\r\n  padding: ${(props) => props.padding || \"0\"};\r\n  .animated {\r\n    -webkit-animation-duration: 1s;\r\n    animation-duration: 1s;\r\n    -webkit-animation-fill-mode: both;\r\n    animation-fill-mode: both;\r\n  }\r\n  .animated.infinite {\r\n    -webkit-animation-iteration-count: infinite;\r\n    animation-iteration-count: infinite;\r\n  }\r\n  .animated.hinge {\r\n    -webkit-animation-duration: 2s;\r\n    animation-duration: 2s;\r\n  }\r\n  /*the animation definition*/\r\n  @-webkit-keyframes fadeInDown {\r\n    0% {\r\n      opacity: 0;\r\n      -webkit-transform: translate3d(0, -100%, 0);\r\n      transform: translate3d(0, -100%, 0);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -webkit-transform: none;\r\n      transform: none;\r\n    }\r\n  }\r\n  @keyframes fadeInDown {\r\n    0% {\r\n      opacity: 0;\r\n      -webkit-transform: translate3d(0, -100%, 0);\r\n      -ms-transform: translate3d(0, -100%, 0);\r\n      transform: translate3d(0, -100%, 0);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -webkit-transform: none;\r\n      -ms-transform: none;\r\n      transform: none;\r\n    }\r\n  }\r\n  .fadeInDown {\r\n    -webkit-animation-name: fadeInDown;\r\n    animation-name: fadeInDown;\r\n  }\r\n`;\r\nconst ConditionWrapper = styled.div`\r\n  width: 100%;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n\r\n  .collapse .collapse-panel {\r\n    margin-bottom: 24px;\r\n    overflow: hidden;\r\n    background: #f05454;\r\n    border: 0px;\r\n    border-radius: 2px;\r\n  }\r\n  .ant-btn {\r\n    background: white;\r\n    color: #f05454;\r\n    font-weight: 700;\r\n    font-family: \"nanumRoundL\";\r\n    border: white;\r\n  }\r\n\r\n  .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n    color: white;\r\n    font-family: \"nanumRoundB\";\r\n  }\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 10px;\r\n`;\r\nconst { Panel } = Collapse;\r\nconst { RangePicker } = DatePicker;\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst Backtest = () => {\r\n  const [start, setstart] = useState();\r\n  const [end, setend] = useState();\r\n\r\n  const user = window.sessionStorage.getItem(\"id\");\r\n  const sectorPanel = \"시장구분\";\r\n\r\n  /**\r\n   * 체크박스 Checkbox\r\n   * 업종(Sector) 가져와서 저장\r\n   */\r\n  //코스피 업종\r\n  const KospiSectorCode = Object.keys(sectorKospi);\r\n  const KospiSectorName = Object.values(sectorKospi);\r\n  const KospiSector = [];\r\n  KospiSectorCode.map((code, idx) => {\r\n    KospiSector.push({ label: KospiSectorName[idx], value: code });\r\n  });\r\n  const [kospiCode, setKospiCode] = useState();\r\n  const [checkedListKospi, setCheckedListKospi] = useState();\r\n  const [indeterminateKospi, setIndeterminateKospi] = useState();\r\n  const [checkAllKospi, setCheckAllKospi] = useState();\r\n  const onChangeKospi = (list) => {\r\n    console.log(\"kospilist\", list);\r\n    setCheckedListKospi(list);\r\n    if (list) {\r\n      setKospiCode(\"1\");\r\n    } else {\r\n      setKospiCode(\"\");\r\n    }\r\n    setIndeterminateKospi(\r\n      !!list.length && list.length < KospiSectorCode.length\r\n    );\r\n    setCheckAllKospi(list.length === KospiSectorCode.length);\r\n  };\r\n  const onCheckAllChangeKospi = (e) => {\r\n    setCheckedListKospi(e.target.checked ? KospiSectorCode : []);\r\n    if (e.target.checked) {\r\n      setKospiCode(\"1\");\r\n    } else {\r\n      setKospiCode(\"\");\r\n    }\r\n    setIndeterminateKospi(false);\r\n    setCheckAllKospi(e.target.checked);\r\n  };\r\n\r\n  //코스닥 업종\r\n  const KosdaqSectorCode = Object.keys(sectorKosdaq);\r\n  const KosdaqSectorName = Object.values(sectorKosdaq);\r\n  const KosdaqSector = [];\r\n  KosdaqSectorCode.map((code, idx) => {\r\n    KosdaqSector.push({ label: KosdaqSectorName[idx], value: code });\r\n  });\r\n  const [kosdaqCode, setKosdaqCode] = useState();\r\n  const [checkedListKosdaq, setCheckedListKosdaq] = useState();\r\n  const [indeterminateKosdaq, setIndeterminateKosdaq] = useState();\r\n  const [checkAllKosdaq, setCheckAllKosdaq] = useState();\r\n  const onChangeKosdaq = (list) => {\r\n    setCheckedListKosdaq(list);\r\n    if (list) {\r\n      setKosdaqCode(\"2\");\r\n    } else {\r\n      setKosdaqCode(\"\");\r\n    }\r\n    setIndeterminateKosdaq(\r\n      !!list.length && list.length < KosdaqSectorCode.length\r\n    );\r\n    setCheckAllKosdaq(list.length === KosdaqSectorCode.length);\r\n  };\r\n  const onCheckAllChangeKosdaq = (e) => {\r\n    setCheckedListKosdaq(e.target.checked ? KosdaqSectorCode : []);\r\n    console.log(\"checked?\", e.target.checked);\r\n    if (e.target.checked) {\r\n      setKosdaqCode(\"2\");\r\n    } else {\r\n      setKosdaqCode(\"\");\r\n    }\r\n    setIndeterminateKosdaq(false);\r\n    setCheckAllKosdaq(e.target.checked);\r\n  };\r\n\r\n  /**\r\n   *  RangePicker : Date, 시작일/종료일\r\n   * */\r\n  //달력 diable 날짜 셋팅\r\n  function disabledDate(current) {\r\n    return (\r\n      (current && current < moment(\"2008-01-01\", \"YYYY-MM-DD\")) ||\r\n      current >= moment().subtract(1, \"days\")\r\n    );\r\n  }\r\n\r\n  //달력 날짜 값\r\n  const updateDate = (dates, dateStrings) => {\r\n    console.log(\"updateDate\", dateStrings[0], dateStrings[1]);\r\n    setstart(dateStrings[0]);\r\n    setend(dateStrings[1]);\r\n  };\r\n  /**\r\n   * 매수 우선순위\r\n   */\r\n  const [checkedListCondition, setCheckedListCondition] = useState([]);\r\n\r\n  //조건 당 div\r\n  const OfferBox = styled.div`\r\n    box-shadow: 0px 0px 7px 3px ${(props) => props.color};\r\n    margin: 10px;\r\n    padding: 15px 20px 10px 20px;\r\n    width: 95%;\r\n    height: 70px;\r\n    align-items: center;\r\n    display: inline-block;\r\n  `;\r\n  //조건 checkbox 함수\r\n  const [disabledPER, setDisabledPER] = useState(false);\r\n  const [disabledPBR, setDisabledPBR] = useState(true);\r\n  const [disabledPSR, setDisabledPSR] = useState(true);\r\n  const [disabledROE, setDisabledROE] = useState(true);\r\n  const [disabledROA, setDisabledROA] = useState(true);\r\n  const [disabledNum, setdisabledNum] = useState(1);\r\n\r\n  //조건 [min, max, order]\r\n  const [PER, setPER] = useState([-100, 300, 1]);\r\n  const [PBR, setPBR] = useState([0.1, 300, 2]);\r\n  const [PSR, setPSR] = useState([0.1, 300, 3]);\r\n  const [ROE, setROE] = useState([-200, 200, 4]);\r\n  const [ROA, setROA] = useState([-200, 200, 5]);\r\n\r\n  const onChangeCondition = (checkedValues) => {\r\n    console.log(\"value?\", checkedValues);\r\n    console.log(\"체크된수\", checkedValues.length);\r\n    setCheckedListCondition(checkedValues);\r\n    setdisabledNum(checkedValues.length);\r\n    console.log(\"이펙트 실행\");\r\n    console.log(\"disabledNum\", checkedValues.length);\r\n    if (!disabledPER && PER[2] > checkedValues.length) {\r\n      // setPER([PER[0], PER[1], disabledNum]);\r\n      onChangeOrderPER(checkedValues.length);\r\n    } else if (!disabledPBR && PBR[2] > checkedValues.length) {\r\n      console.log(\"찾음\");\r\n      // setPBR([PBR[0], PBR[1], disabledNum]);\r\n      onChangeOrderPBR(checkedValues.length);\r\n    } else if (!disabledPSR && PSR[2] > checkedValues.length) {\r\n      // setPSR([PSR[0],PSR[1],disabledNum]);\r\n      onChangeOrderPSR(checkedValues.length);\r\n    } else if (!disabledROE && ROE[2] > checkedValues.length) {\r\n      console.log(\"알아냄\", checkedValues.length);\r\n      onChangeOrderROE(checkedValues.length);\r\n    } else if (!disabledROA && ROA[2] > checkedValues.length) {\r\n      onChangeOrderROA(checkedValues.length);\r\n    } else return;\r\n  };\r\n\r\n  const onChangeCon = (e) => {\r\n    const val = e.target.value;\r\n\r\n    if (val === \"PER\") {\r\n      setDisabledPER(!e.target.checked);\r\n    } else if (val === \"PBR\") {\r\n      setDisabledPBR(!e.target.checked);\r\n    } else if (val === \"PSR\") {\r\n      setDisabledPSR(!e.target.checked);\r\n    } else if (val === \"ROE\") {\r\n      setDisabledROE(!e.target.checked);\r\n    } else {\r\n      setDisabledROA(!e.target.checked);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"diable\", disabledPER);\r\n  }, [onChangeCon]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"list?\", checkedListCondition);\r\n    console.log(\"num?\", disabledNum);\r\n  }, [onChangeCondition]);\r\n\r\n  //조건 범위(range slider)\r\n  const [perval, setperval] = useState([]);\r\n  const onChangeRange = (value) => {};\r\n\r\n  //우선순위\r\n  const onChangeOrderPER = (value) => {\r\n    onChangeCondition(checkedListCondition);\r\n    var checkOrder = [PBR[2], PSR[2], ROE[2], ROA[2]].indexOf(value);\r\n    switch (checkOrder) {\r\n      case 0:\r\n        setPBR([PBR[0], PBR[1], PER[2]]);\r\n        break;\r\n      case 1:\r\n        setPSR([PSR[0], PSR[1], PER[2]]);\r\n        break;\r\n      case 2:\r\n        setROE([ROE[0], ROE[1], PER[2]]);\r\n        break;\r\n      case 3:\r\n        setROA([ROA[0], ROA[1], PER[2]]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setPER([PER[0], PER[1], value]);\r\n  };\r\n  const onChangeOrderPBR = (value) => {\r\n    onChangeCondition(checkedListCondition);\r\n    var checkOrder = [PER[2], PSR[2], ROE[2], ROA[2]].indexOf(value);\r\n    switch (checkOrder) {\r\n      case 0:\r\n        setPER([PER[0], PER[1], PBR[2]]);\r\n        break;\r\n      case 1:\r\n        setPSR([PSR[0], PSR[1], PBR[2]]);\r\n        break;\r\n      case 2:\r\n        setROE([ROE[0], ROE[1], PBR[2]]);\r\n        break;\r\n      case 3:\r\n        setROA([ROA[0], ROA[1], PBR[2]]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setPBR([PBR[0], PBR[1], value]);\r\n  };\r\n  const onChangeOrderPSR = (value) => {\r\n    onChangeCondition(checkedListCondition);\r\n    var checkOrder = [PER[2], PBR[2], ROE[2], ROA[2]].indexOf(value);\r\n    switch (checkOrder) {\r\n      case 0:\r\n        setPER([PER[0], PER[1], PSR[2]]);\r\n        break;\r\n      case 1:\r\n        setPBR([PBR[0], PBR[1], PSR[2]]);\r\n        break;\r\n      case 2:\r\n        setROE([ROE[0], ROE[1], PSR[2]]);\r\n        break;\r\n      case 3:\r\n        setROA([ROA[0], ROA[1], PSR[2]]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setPSR([PSR[0], PSR[1], value]);\r\n  };\r\n  const onChangeOrderROE = (value) => {\r\n    onChangeCondition(checkedListCondition);\r\n    var checkOrder = [PER[2], PBR[2], PSR[2], ROA[2]].indexOf(value);\r\n    switch (checkOrder) {\r\n      case 0:\r\n        setPER([PER[0], PER[1], ROE[2]]);\r\n        break;\r\n      case 1:\r\n        setPBR([PBR[0], PBR[1], ROE[2]]);\r\n        break;\r\n      case 2:\r\n        setPSR([PSR[0], PSR[1], ROE[2]]);\r\n        break;\r\n      case 3:\r\n        setROA([ROA[0], ROA[1], ROE[2]]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setROE([ROE[0], ROE[1], value]);\r\n  };\r\n  const onChangeOrderROA = (value) => {\r\n    onChangeCondition(checkedListCondition);\r\n    var checkOrder = [PER[2], PBR[2], PSR[2], ROE[2]].indexOf(value);\r\n    console.log(\"checkOrder\", checkOrder);\r\n    switch (checkOrder) {\r\n      case 0:\r\n        setPER([PER[0], PER[1], ROA[2]]);\r\n        break;\r\n      case 1:\r\n        setPBR([PBR[0], PBR[1], ROA[2]]);\r\n        break;\r\n      case 2:\r\n        setPSR([PSR[0], PSR[1], ROA[2]]);\r\n        break;\r\n      case 3:\r\n        setROE([ROE[0], ROE[1], ROA[2]]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setROA([ROA[0], ROA[1], value]);\r\n  };\r\n  /**\r\n   * Panel custom\r\n   */\r\n  const customPanelStyle = {\r\n    color: \"#f7f7f7\",\r\n    borderRadius: 4,\r\n    marginBottom: 24,\r\n    border: 0,\r\n    overflow: \"hidden\",\r\n  };\r\n  /**\r\n   * 매도조건 sellMinCondition\r\n   */\r\n  const [sellMin, setsellMin] = useState(-10);\r\n  const [sellMax, setsellMax] = useState(10);\r\n\r\n  /**\r\n   * submit 제출, post\r\n   * */\r\n  const [ActiveKey, setActiveKey] = useState([\"1\", \"2\", \"3\", \"4\"]);\r\n  const submit = () => {\r\n    setActiveKey([]);\r\n    document.documentElement.scrollTo(0, 0);\r\n    const market = [];\r\n    if (kospiCode) {\r\n      market.push(1);\r\n    }\r\n    if (kosdaqCode) {\r\n      market.push(2);\r\n    }\r\n    if (market.length < 1) {\r\n      console.log(\"마켓없음!!!!\");\r\n      return;\r\n    }\r\n\r\n    var sector = [];\r\n    if (checkedListKosdaq) {\r\n      sector = checkedListKospi.concat(checkedListKosdaq);\r\n    } else {\r\n      checkedListKospi.map((ko) => sector.push(ko));\r\n    }\r\n\r\n    const conditions = [];\r\n    if (!disabledPER) {\r\n      const PERdata = [\r\n        window.localStorage.getItem(\"PERMIN\"),\r\n        window.localStorage.getItem(\"PERMAX\"),\r\n        PER[2],\r\n      ];\r\n      conditions.push({ per: PERdata });\r\n    }\r\n    if (!disabledPBR) {\r\n      const PBRdata = [\r\n        window.localStorage.getItem(\"PBRMIN\"),\r\n        window.localStorage.getItem(\"PBRMAX\"),\r\n        PBR[2],\r\n      ];\r\n      conditions.push({ pbr: PBRdata });\r\n    }\r\n    if (!disabledPSR) {\r\n      const PSRdata = [\r\n        window.localStorage.getItem(\"PSRMIN\"),\r\n        window.localStorage.getItem(\"PSRMAX\"),\r\n        PSR[2],\r\n      ];\r\n      conditions.push({ psr: PSRdata });\r\n    }\r\n    if (!disabledROE) {\r\n      const ROEdata = [\r\n        window.localStorage.getItem(\"ROEMIN\"),\r\n        window.localStorage.getItem(\"ROEMAX\"),\r\n        ROE[2],\r\n      ];\r\n      conditions.push({ roe: ROEdata });\r\n    }\r\n    if (!disabledROA) {\r\n      const ROAdata = [\r\n        window.localStorage.getItem(\"ROAMIN\"),\r\n        window.localStorage.getItem(\"ROAMAX\"),\r\n        ROA[2],\r\n      ];\r\n      conditions.push({ roa: ROAdata });\r\n    }\r\n    console.log(conditions);\r\n    const data = {\r\n      id: window.sessionStorage.getItem(\"id\"),\r\n      start: start,\r\n      end: end,\r\n      market: market,\r\n      sector: sector,\r\n      sellCondition: [sellMin, sellMax],\r\n      conditions: conditions,\r\n    };\r\n\r\n    Testing(data);\r\n    const SpinDiv = styled.div`\r\n      padding: 200px 0 0 300px;\r\n    `;\r\n    setView(\r\n      <SpinDiv>\r\n        <Spin tip=\"테스트 중입니다...\"></Spin>\r\n      </SpinDiv>\r\n    );\r\n  };\r\n  async function Testing(values) {\r\n    console.log(\"vals\", values);\r\n    await axios\r\n      .post(\r\n        \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/stock/bt/\",\r\n        values\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then((response) => {\r\n        console.log(\"백테스팅res\", response.data);\r\n        BacktestBar(response.data);\r\n      });\r\n  }\r\n\r\n  const [Btdata, setBtdata] = useState({});\r\n  const history = useHistory();\r\n  const BacktestBar = (data) => {\r\n    const arr = [];\r\n    let i = 0;\r\n    const btarr = data;\r\n    const totalarr = [];\r\n    console.log(\"Btarr\", btarr);\r\n    for (var key in btarr) {\r\n      if (key == \"error\") {\r\n        history.push(\"/main/backtest?code=none\");\r\n      }\r\n      console.log(\"key\", key);\r\n      if (i == 0) {\r\n        console.log(\"data\", btarr[key], key);\r\n        if (btarr[key] != 0) {\r\n          arr.push({\r\n            date: key,\r\n            profit: btarr[key],\r\n            sum: 0,\r\n          });\r\n        }\r\n      } else if (key == \"total\") {\r\n        totalarr.push({ date: \"총 수익률\", profit: btarr[key] });\r\n      } else {\r\n        if (btarr[key] != 0) {\r\n          console.log(\"data\", btarr[key], key);\r\n          arr.push({\r\n            date: key,\r\n            profit: btarr[key],\r\n          });\r\n        }\r\n      }\r\n      i++;\r\n    }\r\n    arr.push(totalarr[0]);\r\n    const btdataset = [];\r\n\r\n    var sum = 0;\r\n    arr.map((a, idx) => {\r\n      if (idx != 0) {\r\n        btdataset.push({\r\n          date: a.date,\r\n          수익률: a.profit,\r\n          누적수익률: `${a.profit + sum}`,\r\n        });\r\n        sum = a.profit + sum;\r\n        console.log(\r\n          \"수익률,누적수익률\",\r\n          a.profit,\r\n          a.profit + arr[idx - 1].profit\r\n        );\r\n      } else {\r\n        sum = a.profit;\r\n        btdataset.push({\r\n          date: a.date,\r\n          수익률: a.profit,\r\n          누적수익률: sum,\r\n        });\r\n      }\r\n    });\r\n    console.log(\"btdataset arr\", btdataset);\r\n    setBtdata(btdataset);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Btdata.length > 0) {\r\n      setActiveKey([\"1\", \"2\", \"3\", \"4\"]);\r\n      setView(\r\n        <BarChart width={730} height={400} data={Btdata}>\r\n          <XAxis dataKey=\"date\" stroke=\"#EAF0F4\" />\r\n          <ReferenceLine y={0} stroke=\"white\" />\r\n          <YAxis tickFormatter={(label) => label + \" %\"} stroke=\"#EAF0F4\" />\r\n          <Tooltip\r\n            formatter={(label) => label + \" (%)\"}\r\n            cursor={{ stroke: \"white\", fill: \"none\" }}\r\n          />\r\n          <Bar maxBarSize={30} dataKey=\"수익률\" fill=\"#ffde4e\" />\r\n          <Bar maxBarSize={30} dataKey=\"누적수익률\" fill=\"#ff9100\" />\r\n        </BarChart>\r\n      );\r\n    } else {\r\n      setView(DoIntBox);\r\n    }\r\n  }, [Btdata]);\r\n  const DoIntBox = () => {\r\n    return (\r\n      <BoxWrapper w=\"700px\" padding=\"100px 0 30px 30%\">\r\n        <MText\r\n          font=\"a고딕15\"\r\n          size=\"30px\"\r\n          display=\"inline-flex\"\r\n          padBot=\"0\"\r\n          color=\"#f05454\"\r\n        >\r\n          백테스팅\r\n        </MText>\r\n        <br />\r\n        <MText font=\"a고딕13\" size=\"30px\" color=\"#dddddd\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;조건을 입력하여\r\n          실행\r\n        </MText>\r\n        <br />\r\n        <MText\r\n          font=\"a고딕13\"\r\n          size=\"40px\"\r\n          color=\"#dddddd\"\r\n          className=\"fadeInDown animated\"\r\n          padding=\"30px 50px 0 150px\"\r\n        >\r\n          <ArrowDownOutlined />\r\n        </MText>\r\n      </BoxWrapper>\r\n    );\r\n  };\r\n  const [view, setView] = useState(DoIntBox);\r\n  const [btData, setbtData] = useState(window.localStorage.getItem(\"btData\"));\r\n\r\n  const Collapse2 = styled(Collapse)`\r\n    overflow-y: scroll;\r\n    max-height: 500px;\r\n  `;\r\n  return (\r\n    <Wrapper>\r\n      <BoxWrapper w=\"45%\">\r\n        <ConditionWrapper>\r\n          <Collapse\r\n            className=\"collapse\"\r\n            defaultActiveKey={[\"1\", \"2\", \"3\", \"4\"]}\r\n          >\r\n            <Panel header=\"기간설정\" key=\"1\" className=\"collapse-panel\">\r\n              <Space direction=\"vertical\" size={12}>\r\n                <RangePicker\r\n                  disabledDate={disabledDate}\r\n                  onChange={updateDate}\r\n                />\r\n              </Space>\r\n            </Panel>\r\n            <Panel header={sectorPanel} key=\"2\" className=\"collapse-panel\">\r\n              <p>코스피</p>\r\n              <Checkbox\r\n                indeterminate={indeterminateKospi}\r\n                onChange={onCheckAllChangeKospi}\r\n                checked={checkAllKospi}\r\n              >\r\n                전체선택\r\n              </Checkbox>\r\n              <CheckboxGroup\r\n                options={KospiSector}\r\n                value={checkedListKospi}\r\n                onChange={onChangeKospi}\r\n              />\r\n              <Divider></Divider>\r\n              <p>코스닥</p>\r\n              <Checkbox\r\n                indeterminate={indeterminateKosdaq}\r\n                onChange={onCheckAllChangeKosdaq}\r\n                checked={checkAllKosdaq}\r\n              >\r\n                전체선택\r\n              </Checkbox>\r\n              <CheckboxGroup\r\n                options={KosdaqSector}\r\n                value={checkedListKosdaq}\r\n                onChange={onChangeKosdaq}\r\n              />\r\n            </Panel>\r\n            <Panel header=\"매수 우선순위\" key=\"3\" className=\"collapse-panel\">\r\n              <Checkbox.Group\r\n                style={{ width: \"100%\" }}\r\n                onChange={onChangeCondition}\r\n                defaultValue={[\"PER\"]}\r\n              >\r\n                <OfferBox color={disabledPER ? \"#ababab\" : \"#1890ff\"}>\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Checkbox value=\"PER\" onChange={onChangeCon}>\r\n                        PER\r\n                      </Checkbox>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      우선순위&nbsp;\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={disabledNum}\r\n                        style={{ width: 50 }}\r\n                        value={PER[2]}\r\n                        onChange={onChangeOrderPER}\r\n                        disabled={disabledPER}\r\n                      />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Slider\r\n                        disabled={disabledPER}\r\n                        range\r\n                        marks={{ \"-100\": \"-100\", 300: \"300\" }}\r\n                        min={-100}\r\n                        max={300}\r\n                        defaultValue={[-90, 290]}\r\n                        onChange={onChangeRange}\r\n                        onAfterChange={(value) => {\r\n                          console.log(\"afterChangePER\", value);\r\n                          window.localStorage.removeItem(\"PERMIN\");\r\n                          window.localStorage.removeItem(\"PERMAX\");\r\n                          window.localStorage.setItem(\"PERMIN\", value[0]);\r\n                          window.localStorage.setItem(\"PERMAX\", value[1]);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </OfferBox>\r\n                <OfferBox color={disabledPBR ? \"#ababab\" : \"#1890ff\"}>\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Checkbox value=\"PBR\" onChange={onChangeCon}>\r\n                        PBR\r\n                      </Checkbox>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      우선순위&nbsp;\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={disabledNum}\r\n                        style={{ width: 50 }}\r\n                        value={disabledPBR ? \"\" : PBR[2]}\r\n                        onChange={onChangeOrderPBR}\r\n                        disabled={disabledPBR}\r\n                      />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Slider\r\n                        disabled={disabledPBR}\r\n                        range\r\n                        marks={{ 0.1: \"0.1\", 300: \"300\" }}\r\n                        step={0.1}\r\n                        min={0.1}\r\n                        max={300}\r\n                        defaultValue={[0.1, 300]}\r\n                        onChange={onChangeRange}\r\n                        onAfterChange={(value) => {\r\n                          console.log(\"afterChangePBR\", value);\r\n                          window.localStorage.removeItem(\"PBRMIN\");\r\n                          window.localStorage.removeItem(\"PBRMAX\");\r\n                          window.localStorage.setItem(\"PBRMIN\", value[0]);\r\n                          window.localStorage.setItem(\"PBRMAX\", value[1]);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </OfferBox>\r\n                <OfferBox color={disabledPSR ? \"#ababab\" : \"#1890ff\"}>\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Checkbox value=\"PSR\" onChange={onChangeCon}>\r\n                        PSR\r\n                      </Checkbox>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      우선순위&nbsp;\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={disabledNum}\r\n                        style={{ width: 50 }}\r\n                        value={disabledPSR ? \"\" : PSR[2]}\r\n                        onChange={onChangeOrderPSR}\r\n                        disabled={disabledPSR}\r\n                      />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Slider\r\n                        disabled={disabledPSR}\r\n                        range\r\n                        marks={{ 0.1: \"0.1\", 300: \"300\" }}\r\n                        step={0.1}\r\n                        min={0.1}\r\n                        max={300}\r\n                        defaultValue={[0.1, 300]}\r\n                        onChange={onChangeRange}\r\n                        onAfterChange={(value) => {\r\n                          window.localStorage.removeItem(\"PSRMIN\");\r\n                          window.localStorage.removeItem(\"PSRMAX\");\r\n                          window.localStorage.setItem(\"PSRMIN\", value[0]);\r\n                          window.localStorage.setItem(\"PSRMAX\", value[1]);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </OfferBox>\r\n                <OfferBox color={disabledROE ? \"#ababab\" : \"#1890ff\"}>\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Checkbox value=\"ROE\" onChange={onChangeCon}>\r\n                        ROE (단위:%)\r\n                      </Checkbox>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      우선순위&nbsp;\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={disabledNum}\r\n                        style={{ width: 50 }}\r\n                        value={disabledROE ? \"\" : ROE[2]}\r\n                        onChange={onChangeOrderROE}\r\n                        disabled={disabledROE}\r\n                      />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Slider\r\n                        disabled={disabledROE}\r\n                        range\r\n                        marks={{ \"-200\": \"-200%\", 200: \"200%\" }}\r\n                        step={10}\r\n                        min={-200}\r\n                        max={200}\r\n                        defaultValue={[-200, 200]}\r\n                        onChange={onChangeRange}\r\n                        onAfterChange={(value) => {\r\n                          window.localStorage.removeItem(\"ROEMIN\");\r\n                          window.localStorage.removeItem(\"ROEMAX\");\r\n                          window.localStorage.setItem(\"ROEMIN\", value[0]);\r\n                          window.localStorage.setItem(\"ROEMAX\", value[1]);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </OfferBox>\r\n                <OfferBox color={disabledROA ? \"#ababab\" : \"#1890ff\"}>\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Checkbox value=\"ROA\" onChange={onChangeCon}>\r\n                        ROA (단위:%)\r\n                      </Checkbox>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      우선순위&nbsp;\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={disabledNum}\r\n                        style={{ width: 50 }}\r\n                        value={disabledROA ? \"\" : ROA[2]}\r\n                        onChange={onChangeOrderROA}\r\n                        disabled={disabledROA}\r\n                      />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Slider\r\n                        disabled={disabledROA}\r\n                        range\r\n                        marks={{ \"-200\": \"-200%\", 200: \"200%\" }}\r\n                        step={10}\r\n                        min={-200}\r\n                        max={200}\r\n                        defaultValue={[-200, 200]}\r\n                        onChange={onChangeRange}\r\n                        onAfterChange={(value) => {\r\n                          window.localStorage.removeItem(\"ROAMIN\");\r\n                          window.localStorage.removeItem(\"ROAMAX\");\r\n                          window.localStorage.setItem(\"ROAMIN\", value[0]);\r\n                          window.localStorage.setItem(\"ROAMAX\", value[1]);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </OfferBox>\r\n              </Checkbox.Group>\r\n            </Panel>\r\n            <Panel header=\"매도조건\" key=\"4\" className=\"collapse-panel\">\r\n              최소&nbsp;:&nbsp;\r\n              <InputNumber\r\n                min={-100}\r\n                max={100}\r\n                style={{ width: 50 }}\r\n                value={sellMin}\r\n                onChange={(value) => setsellMin(value)}\r\n              />\r\n              &nbsp;%&nbsp;&nbsp; 최대&nbsp;:&nbsp;\r\n              <InputNumber\r\n                min={-100}\r\n                max={100}\r\n                style={{ width: 50 }}\r\n                value={sellMax}\r\n                onChange={(value) => setsellMax(value)}\r\n              />\r\n              &nbsp;%&nbsp;\r\n            </Panel>\r\n          </Collapse>\r\n          <ButtonWrapper className=\"btn\">\r\n            <Button type=\"primary\" className=\"SubmitBtn\" onClick={submit}>\r\n              테스트 하기\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </ConditionWrapper>\r\n      </BoxWrapper>\r\n      <BoxWrapper padding=\"100px 10px 0 0\">{view}</BoxWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Backtest;\r\n","import Backtest from \"./Backtest\";\r\nexport default Backtest;\r\n","const indicatorList = [\r\n  \"VPT\",\r\n  \"CMF\",\r\n  \"EoM\",\r\n  \"FI\",\r\n  \"ADI\",\r\n  \"VWAP\",\r\n  \"DC\",\r\n  \"KC\",\r\n  \"PPO\",\r\n  \"RSI\",\r\n  \"SRSI\",\r\n  \"TSI\",\r\n  \"UO\",\r\n  \"WR\",\r\n  \"KAMA\",\r\n  \"CCI\",\r\n  \"DPO\",\r\n  \"KST\",\r\n  \"STC\",\r\n  \"TRIX\",\r\n  \"MACD\",\r\n  \"WMA\",\r\n  \"EMA\",\r\n];\r\n\r\nexport default indicatorList;\r\n","import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { AntennaChart, MainText, MText } from \"../../components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport {\r\n  message,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Space,\r\n  Collapse,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { Spin, Alert } from \"antd\";\r\n\r\nimport { AntennaSubmit } from \"../../components\";\r\nimport { ResponsiveLine } from \"nivo\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n} from \"recharts\";\r\n\r\nimport indicatorList from \"./indicatorList\";\r\nimport stocklist from \"./stocklist.json\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Panel } = Collapse;\r\nconst { Option } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: inline-flex;\r\n  padding: ${(props) => props.padding || \"30px\"};\r\n  background-color: #30475e;\r\n\r\n  .collapse .collapse-panel {\r\n    margin-bottom: 24px;\r\n    overflow: hidden;\r\n    background: #f05454;\r\n    border: 0px;\r\n    border-radius: 2px;\r\n  }\r\n  .ant-btn {\r\n    background: white;\r\n    color: #f05454;\r\n    font-weight: 700;\r\n    font-family: \"nanumRoundL\";\r\n    border: white;\r\n  }\r\n\r\n  .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n    color: white;\r\n    font-family: \"nanumRoundB\";\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 10px;\r\n`;\r\nconst BoxWrapper = styled.div`\r\n  width: ${(props) => props.w || \"55%\"};\r\n  height: 100%;\r\n  display: inline-block;\r\n  padding: ${(props) => props.padding || \"0\"};\r\n`;\r\n\r\nconst AntennaTestPage = () => {\r\n  /**\r\n   * 보조지표 체크박스\r\n   * @param {*} e\r\n   */\r\n  //기본 보조지표 체크 함수\r\n  const [company, setCompany] = useState({});\r\n  const [checkedIndicator, setCheckedIndicator] = useState([]);\r\n  const [diff, setDiff] = useState(true);\r\n  const [diffrate, setDiffrate] = useState(true);\r\n  const [date, setDate] = useState(7);\r\n  const onChangeDefaultIdc = (e) => {\r\n    var Idc = e.target.value;\r\n    if (Idc == \"diff\") {\r\n      if (e.target.checked) {\r\n        setDiff(true);\r\n      } else {\r\n        setDiff(false);\r\n      }\r\n    } else {\r\n      if (e.target.checked) {\r\n        setDiffrate(true);\r\n      } else {\r\n        setDiffrate(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  //추가 보조지표 체크 함수\r\n  const onChangeIndicator = (list) => {\r\n    setCheckedIndicator(list);\r\n    console.log(\"checkedlist\", list);\r\n  };\r\n\r\n  /**\r\n   * 예측일\r\n   */\r\n  const onChangeDate = (value) => {\r\n    console.log(value, \"일\");\r\n    setDate(value);\r\n  };\r\n\r\n  /**\r\n   * 제출 시 경고\r\n   */\r\n  const warning = (value) => {\r\n    message.warning(value, 1);\r\n  };\r\n  /**\r\n   * 제출 submit\r\n   */\r\n\r\n  const submit = () => {\r\n    const checkedlist = [];\r\n    checkedIndicator.map((check) => {\r\n      checkedlist.push(check);\r\n    });\r\n    if (diff) {\r\n      checkedlist.push(\"diff\");\r\n    }\r\n    if (diffrate) {\r\n      checkedlist.push(\"diffrate\");\r\n    }\r\n    console.log(\"checkedlist!!!!!\", checkedlist);\r\n    if (!company.code) {\r\n      warning(\"주식을 선택하세요.\");\r\n      return;\r\n    }\r\n    if (checkedlist.length < 2) {\r\n      warning(\"보조지표는 최소 2개를 선택해야합니다.\");\r\n      return;\r\n    }\r\n    const data = {\r\n      companyCode: company.code,\r\n      predictDate: date,\r\n      indicator: checkedlist,\r\n    };\r\n\r\n    AntennaSubmit(data);\r\n    const SpinDiv = styled.div`\r\n      width: 100%;\r\n      margin: 200px 0 0 300px;\r\n    `;\r\n    setView(\r\n      <SpinDiv>\r\n        <Spin tip=\"예측중입니다...\"></Spin>\r\n      </SpinDiv>\r\n    );\r\n  };\r\n\r\n  async function AntennaSubmit(data) {\r\n    const response = await axios.post(\r\n      \"http://ec2-3-37-87-254.ap-northeast-2.compute.amazonaws.com:8000/tensor/antenna/\",\r\n      data\r\n    );\r\n    console.log(\"Antenna\", response.data);\r\n    console.log(\"나온다...\", response.data.actual);\r\n\r\n    AntennaChart(response.data);\r\n  }\r\n\r\n  const [AntData, setAntData] = useState({});\r\n\r\n  const [actData, setActData] = useState([]);\r\n  const [preData, setPreData] = useState([]);\r\n\r\n  const [chartArr, setChartArr] = useState([]);\r\n  const [YLine, setYLine] = useState();\r\n  const AntennaChart = (data) => {\r\n    console.log(data);\r\n    const preArr = [];\r\n    const predict = data.predict;\r\n\r\n    setPreData(preArr);\r\n\r\n    const actArr = [];\r\n    const act = data.actual;\r\n    const chArr = [];\r\n    let i = 1;\r\n    for (var key in predict) {\r\n      if (act[key]) {\r\n        chArr.push({ x: \"\", 예측치: predict[key], 실제: act[key] });\r\n        console.log(\"if act\", act[key]);\r\n      } else {\r\n        chArr.push({ x: i + \"일\", 예측치: predict[key], 실제: null });\r\n        console.log(\"else act\", act[key]);\r\n        setYLine(i);\r\n        i++;\r\n      }\r\n    }\r\n    setAntData(data);\r\n    setActData(actArr);\r\n    setChartArr(chArr);\r\n  };\r\n\r\n  const Box = styled.div`\r\n    width: 700px;\r\n    height: 300px;\r\n    margin-left: 60%;\r\n    display: block;\r\n  `;\r\n\r\n  const [view, setView] = useState(\r\n    <Box>\r\n      <MText\r\n        padding=\"100px 0 0 100px\"\r\n        className=\"fadeInDown animated\"\r\n        font=\"a고딕15\"\r\n        size=\"30px\"\r\n        display=\"inline-flex\"\r\n        padBot=\"0\"\r\n        color=\"#f05454\"\r\n      >\r\n        주가예측\r\n      </MText>\r\n      <br />\r\n      <MText\r\n        padding=\"0 0 0 100px\"\r\n        font=\"a고딕13\"\r\n        size=\"30px\"\r\n        color=\"#DDDDDD\"\r\n        className=\"fadeInDown animated\"\r\n      >\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;조건을 입력하여\r\n        예측하기\r\n      </MText>\r\n    </Box>\r\n  );\r\n  useEffect(() => {\r\n    console.log(\"chartArr\", chartArr);\r\n    if (chartArr.length > 0) {\r\n      setView(\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart\r\n            width={600}\r\n            height={300}\r\n            data={chartArr}\r\n            margin={{\r\n              top: 5,\r\n              right: 10,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <YAxis\r\n              dataKey=\"실제\"\r\n              type=\"number\"\r\n              domain={[\"dataMin - 1500\", \"dataMax + 5000\"]}\r\n              tick={{ fontSize: 10 }}\r\n              stroke=\"#a9a9a9\"\r\n            />\r\n            <ReferenceLine x={chartArr.length - 15} stroke=\"green\" />\r\n            <XAxis dataKey=\"x\" stroke=\"#a9a9a9\" />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"실제\"\r\n              stroke=\"#a9a9a9\"\r\n              dot={false}\r\n              connectNulls\r\n            />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"예측치\"\r\n              stroke=\"#ffa011\"\r\n              dot={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    } else\r\n      setView(\r\n        <viewBox>\r\n          <MText\r\n            className=\"fadeInDown animated\"\r\n            padding=\"100px 0 0 100px\"\r\n            font=\"a고딕15\"\r\n            size=\"30px\"\r\n            display=\"inline-flex\"\r\n            padBot=\"0\"\r\n            color=\"#f05454\"\r\n          >\r\n            주가 예측\r\n          </MText>\r\n          <br />\r\n          <MText\r\n            padding=\"0 0 0 100px\"\r\n            font=\"a고딕13\"\r\n            size=\"30px\"\r\n            color=\"#DDDDDD\"\r\n            className=\"fadeInDown animated\"\r\n          >\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;조건을\r\n            입력하여 예측하기\r\n          </MText>\r\n        </viewBox>\r\n      );\r\n  }, [chartArr]);\r\n  return (\r\n    <Wrapper>\r\n      <BoxWrapper w=\"45%\">\r\n        <Collapse className=\"collapse\" defaultActiveKey={[\"1\", \"2\", \"3\"]}>\r\n          <Panel header=\"주식\" key=\"1\" className=\"collapse-panel\">\r\n            <Autocomplete\r\n              id=\"searchStock\"\r\n              company={company}\r\n              onChange={(e, newcompany) => {\r\n                if (newcompany) {\r\n                  setCompany({\r\n                    code: newcompany.code,\r\n                    company: newcompany.company,\r\n                  });\r\n                } else {\r\n                  setCompany({});\r\n                }\r\n                console.log(\"val\", company);\r\n              }}\r\n              options={stocklist}\r\n              getOptionLabel={(option) => option.company}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"종목명\" variant=\"outlined\" />\r\n              )}\r\n            ></Autocomplete>\r\n          </Panel>\r\n          <Panel header=\"보조지표\" key=\"2\" className=\"collapse-panel\">\r\n            <Row>\r\n              <Checkbox\r\n                value=\"diff\"\r\n                defaultChecked={true}\r\n                onChange={onChangeDefaultIdc}\r\n              >\r\n                전일비\r\n              </Checkbox>\r\n              <Checkbox\r\n                value=\"diffrate\"\r\n                defaultChecked={true}\r\n                onChange={onChangeDefaultIdc}\r\n              >\r\n                등락률\r\n              </Checkbox>\r\n              <CheckboxGroup\r\n                options={indicatorList}\r\n                value={checkedIndicator}\r\n                onChange={onChangeIndicator}\r\n              ></CheckboxGroup>\r\n            </Row>\r\n          </Panel>\r\n          <Panel header=\"예측일\" key=\"3\" className=\"collapse-panel\">\r\n            <Select\r\n              defaultValue={7}\r\n              style={{ width: 120 }}\r\n              onChange={onChangeDate}\r\n            >\r\n              <Option value={7}>7일</Option>\r\n              <Option value={14}>14일</Option>\r\n              <Option value={21}>21일</Option>\r\n              <Option value={28}>28일</Option>\r\n            </Select>\r\n          </Panel>\r\n        </Collapse>\r\n        <ButtonWrapper className=\"btn\">\r\n          <Button type=\"primary\" className=\"SubmitBtn\" onClick={submit}>\r\n            테스트하기\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </BoxWrapper>\r\n\r\n      <BoxWrapper padding=\"0 20px 30px 20px\">{view}</BoxWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AntennaTestPage;\r\n","import AntennaTestPage from \"./AntennaTestPage\";\r\nexport default AntennaTestPage;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InterestList from \"../../components/Interest/InterestList\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #e4e4e4;\r\n`;\r\n\r\nconst InterestMain = () => {\r\n  return (\r\n    <Wrapper>\r\n      <InterestList />\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default InterestMain;\r\n","import InterestMain from \"./InterestMain\";\r\nexport default InterestMain;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Word } from \"../containers\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  display: inline-flex;\r\n  padding: 10px;\r\n  background-color: ${(props) => (props.color ? \"white\" : \"#f05454\")};\r\n  @media screen and (max-width: 1300px) {\r\n    flex-direction: column;\r\n    min-height: 0px;\r\n  }\r\n`;\r\n\r\nconst PageContentsWrap = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst WordWrap = styled.div`\r\n  margin-top: 20px;\r\n  margin-right: 10px;\r\n  @media screen and (max-width: 1300px) {\r\n    ${(props) => props.smallDelete && \"display: none\"};\r\n  }\r\n`;\r\n\r\nconst withLivePanel = (Comp, smallDelete) => (props) => {\r\n  return (\r\n    <Wrapper color={smallDelete}>\r\n      <PageContentsWrap>\r\n        <Comp {...props} wordComp></Comp>\r\n      </PageContentsWrap>\r\n      <WordWrap smallDelete={smallDelete}>\r\n        <Word></Word>\r\n      </WordWrap>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default withLivePanel;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route, useHistory } from \"react-router-dom\";\r\nimport * as Layouts from \"./layouts\";\r\nimport * as Containers from \"./containers\";\r\nimport { withLivePanel } from \"./hoc\";\r\nimport { FontTestPage } from \"./components\";\r\n\r\nconst News = withLivePanel(Containers.News, false);\r\nconst Antenna = withLivePanel(Containers.Antenna, true);\r\n\r\nconst RedirectMain = () => {\r\n  const history = useHistory();\r\n  useEffect(() => history.push(\"/main/home\"));\r\n  return <></>;\r\n};\r\n\r\nconst Router = () => {\r\n  const logged = window.sessionStorage.getItem(\"logged\");\r\n  console.log(\"logged??\", logged);\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <RedirectMain />\r\n        </Route>\r\n        <Route\r\n          path=\"/main\"\r\n          render={() => (\r\n            <Layouts.MainLayout>\r\n              <Route path=\"/main/home\" exact>\r\n                <Containers.Main />\r\n              </Route>\r\n              <Route path=\"/main/antenna\" exact>\r\n                <Containers.Antenna />\r\n              </Route>\r\n              <Route path=\"/main/antenna/test\" exact>\r\n                <Containers.AntennaTestPage />\r\n              </Route>\r\n              <Route path=\"/main/news\">\r\n                <News />\r\n              </Route>\r\n              <Route path=\"/main/infoThresh\" exact>\r\n                <Containers.InfoStock backcolor=\" #30475e\" />\r\n              </Route>\r\n              <Route path=\"/main/infoThresh/stock\" exact>\r\n                <Containers.InfoThreshStock backcolor=\" #30475e\" />\r\n              </Route>\r\n              <Route path=\"/main/backtest\">\r\n                {logged === \"true\" ? (\r\n                  <Containers.Backtest backcolor=\" #30475e\" />\r\n                ) : (\r\n                  <Containers.Login alert=\"로그인이 필요합니다.\" />\r\n                )}\r\n              </Route>\r\n              <Route path=\"/main/login\">\r\n                {logged === \"true\" ? (\r\n                  <Containers.MyPage />\r\n                ) : (\r\n                  <Containers.Login />\r\n                )}\r\n              </Route>\r\n              <Route path=\"/main/myPage\">\r\n                {logged === \"true\" ? (\r\n                  <Containers.MyPage />\r\n                ) : (\r\n                  <Containers.Login alert=\"로그인이 필요합니다.\" />\r\n                )}\r\n              </Route>\r\n              <Route path=\"/main/signUp\">\r\n                <Containers.SignUp />\r\n              </Route>\r\n              <Route path=\"/main/interest\">\r\n                {logged === \"true\" ? (\r\n                  <Containers.InterestMain />\r\n                ) : (\r\n                  <Containers.Login alert=\"로그인이 필요합니다.\" />\r\n                )}\r\n              </Route>\r\n              <Route path=\"/main/fonttest\">\r\n                <FontTestPage></FontTestPage>\r\n              </Route>\r\n            </Layouts.MainLayout>\r\n          )}\r\n        ></Route>\r\n        <Route path=\"*\">404</Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\r\n\r\nconst whiteTheme = {\r\n  theme: \"wh\",\r\n  bgColor: \"#FFFFFF\",\r\n  fontColor: \"#000000\",\r\n  primaryColor: \"#ffffff\",\r\n};\r\n\r\nconst darkTheme = {\r\n  ...whiteTheme,\r\n  theme: \"bk\",\r\n  bgColor: \"#000000\",\r\n  fontColor: \"#FFFFFF\",\r\n  primaryColor: \"#d3d3d3\",\r\n};\r\n\r\nconst ThemeProvider = (props) => {\r\n  const { children } = props;\r\n  const [theme, setTheme] = useState(whiteTheme);\r\n\r\n  const changeTheme = useCallback(() => {\r\n    if (theme === whiteTheme) {\r\n      setTheme(darkTheme);\r\n    } else {\r\n      setTheme(whiteTheme);\r\n    }\r\n  }, [theme]);\r\n\r\n  console.log(\"children?\", children);\r\n  return (\r\n    <StyledThemeProvider theme={{ ...theme, changeTheme }}>\r\n      {children}\r\n    </StyledThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./Router\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Router />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}